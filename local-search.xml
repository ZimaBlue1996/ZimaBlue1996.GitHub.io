<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>git基础教程与常用操作</title>
    <link href="/2024/08/19/git%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B%E4%B8%8E%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/"/>
    <url>/2024/08/19/git%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B%E4%B8%8E%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<h1 id="git"><a href="#git" class="headerlink" title="git"></a>git</h1><h2 id="git-资源下载"><a href="#git-资源下载" class="headerlink" title="git 资源下载"></a>git 资源下载</h2><p>git：<a href="https://mirrors.tuna.tsinghua.edu.cn/github-release/git-for-windows/git/LatestRelease/">https://mirrors.tuna.tsinghua.edu.cn/github-release/git-for-windows/git/LatestRelease/</a><br>gitextension： <a href="https://gitextensions.github.io/">https://gitextensions.github.io/</a></p><h2 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h2><p>创建仓库：git init 拉取远程到本地：git clone 添加文件：git add<br>[filename] 添加所有文件：git add . 忽略文件：.gitignore<br>提交到本地仓库：git commite -m “commit message” 查看状态：git status<br>对比工具：git diff （使用 bc 代替）<br>配置全局邮箱与用户名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;zhang.san&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;zhang.san@xxx.com&quot;</span><br>git config --globa color.ui <span class="hljs-literal">true</span><br>git config --global init.defaultBranch main<br></code></pre></td></tr></table></figure><p>生成密钥步骤： 在 Windows Terminal 中输入：<br>ssh-keygen -t rsa -C “<a href="mailto:&#122;&#x68;&#x61;&#x6e;&#103;&#46;&#x73;&#x61;&#110;&#64;&#120;&#x78;&#120;&#46;&#99;&#x6f;&#109;">&#122;&#x68;&#x61;&#x6e;&#103;&#46;&#x73;&#x61;&#110;&#64;&#120;&#x78;&#120;&#46;&#99;&#x6f;&#109;</a>“<br>一直回车过去,在系统默认路径 C:\Users<user name>.ssh<br>下生成 id_rsa.pub 和 id_rsa 文件</p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p>Q: 带模块的仓库,下载出错如何继续?<br>A: 进入仓库,执行<code>git submodule update --init --recursive</code>,或者执行<code>git fetch [url]</code><br>A: 使用 hash 切换分支 <code>git checkout &lt;hash&gt;</code></p><h2 id="配置文件说明"><a href="#配置文件说明" class="headerlink" title="配置文件说明"></a>配置文件说明</h2><p>:PROPERTIES:<br>:CUSTOM_ID: 配置文件说明<br>:END:<br>仓库优先级最高，个人其次，使用用户级别配置文件 仓库级别路径：.git\config<br>用户级别路径：C:\Users&lt;user-name&gt;.gitconfig<br>系统级别路径：C:\Program Files\Git\etc\config</p><h2 id="配置文件命令"><a href="#配置文件命令" class="headerlink" title="配置文件命令"></a>配置文件命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">[user]<br>name = name<br>email = name@xxx.com<br>[color]<br>ui = <span class="hljs-literal">true</span><br>[<span class="hljs-built_in">alias</span>]<br>br = branch<br>ci = commit<br>co = checkout<br><span class="hljs-built_in">type</span> = cat-file -t<br>dump = cat-file -p<br>st = status<br>unstage= reset HEAD --<br>last = <span class="hljs-built_in">log</span> -1 HEAD<br>visual = !gitk<br>hist = <span class="hljs-built_in">log</span> --pretty=format:\&quot;%h %ad | %s%d [%an]\&quot; --graph --<span class="hljs-built_in">date</span>=short<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs bash">git add file_name<br>git commit -m <span class="hljs-string">&quot;some comment&quot;</span><br>git status<br>git cnfig --list<br>git <span class="hljs-built_in">clone</span> [url]<br>git push origin HEAD:refs/for/master<br>//str: <span class="hljs-built_in">hash</span> author_name author_date comment<br>git <span class="hljs-built_in">log</span> --pretty=format:<span class="hljs-string">&quot;%h - %an, %ar : %s&quot;</span> --graph<br>git <span class="hljs-built_in">log</span> --since=2.weeks<br>git push [remote-name] [branch-name]<br>git config --global alias.ci commit //alias<br>git config --global alias.last <span class="hljs-string">&#x27;log -1 HEAD&#x27;</span> //alias<br>git checkout -b branch_name //创建分支并切换过去,等价于下面两行<br>git branch branch_name<br>git checkout branch_name<br>//创建修复分支并合并<br>git checkout -b hotfix<br>//做一些修复工作<br>git add .<br>git commit -m <span class="hljs-string">&quot;做了一些修复工作&quot;</span><br>git checkout master<br>git merge hotfix<br>git branch -d hotfix //master 移动到 hotfix 后，hotfix 就要删除掉<br>git branch -f main HEAD~3<br>git cherry-pick &lt;提交号&gt;<br>git rebase --interactive<br>//拉取远程仓库并合并到本地，然后上传<br>git pull --rebase<br>git push<br>//当使用 reset 后，使用 reflog 查看丢失的 <span class="hljs-built_in">log</span>，可以根据哈希值回到 reset 之前<br>git reflog<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;name&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;name@xxx.com&quot;</span><br>git config --global core.editor vim<br>[gui]<br>encoding = utf-8<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># gitlab 使用的时候，记得设置 ssh key 到网站上</span><br><span class="hljs-comment"># 在本机输入：</span><br>ssh-keygen<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 代码带子模块</span><br>git <span class="hljs-built_in">clone</span> --recursive [address]<br><span class="hljs-comment"># 已经下载仓库</span><br>git submodule init<br>git submodule update<br></code></pre></td></tr></table></figure><h2 id="git-多账户配置"><a href="#git-多账户配置" class="headerlink" title="git 多账户配置"></a>git 多账户配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 为公司生成一对秘钥 ssh key</span><br>ssh-keygen -t rsa -C <span class="hljs-string">&#x27;yourEmail@xx.com&#x27;</span> -f ~/.ssh/gitlab-rsa<br><span class="hljs-comment"># 为 github 生成一对秘钥 ssh key</span><br>ssh-keygen -t rsa -C <span class="hljs-string">&#x27;yourEmail2@xx.com&#x27;</span> -f ~/.ssh/github-rsa<br><span class="hljs-comment"># 在~/.ssh 目录下新建名称为 config 的文件（无后缀名）。用于配置多个不同的 host 使用不同的 ssh key，内容如下：</span><br><span class="hljs-comment"># gitlab</span><br>Host gitlab.com<br>HostName gitlab.com<br>PreferredAuthentications publickey<br>IdentityFile ~/.ssh/gitlab_id-rsa<br><span class="hljs-comment"># github</span><br>Host github.com<br>HostName github.com<br>PreferredAuthentications publickey<br>IdentityFile ~/.ssh/github_id-rsa<br><span class="hljs-comment"># 配置文件参数说明</span><br><span class="hljs-comment"># Host : Host 可以看作是一个你要识别的模式，对识别的模式，进行配置对应的的主机名和 ssh 文件</span><br><span class="hljs-comment"># HostName : 要登录主机的主机名</span><br><span class="hljs-comment"># User : 登录名</span><br><span class="hljs-comment"># IdentityFile : 指明上面 User 对应的 identityFile 路径</span><br><span class="hljs-comment"># 按照上面的步骤分别往 gitlab 和 github 上添加生成的公钥 gitlab_id-rsa.pub 和 github_id-rsa.pub</span><br><span class="hljs-comment"># OK，大功告成，再次执行 git 命令验证是不是已经不需要再次验证权限了。</span><br><span class="hljs-comment"># 再次查看~/.ssh 目录下的文件,会有 gitlab_id-rsa、gitlab_id-rsa.pub 和 github_id-rsa、github_id-rsa.pub 四个文件</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>软件</category>
      
    </categories>
    
    
    <tags>
      
      <tag>软件操作</tag>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows电脑入门教程</title>
    <link href="/2024/08/12/Windows%E7%94%B5%E8%84%91%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/"/>
    <url>/2024/08/12/Windows%E7%94%B5%E8%84%91%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="电脑入门教程"><a href="#电脑入门教程" class="headerlink" title="电脑入门教程"></a>电脑入门教程</h1><blockquote><p>计划：录制一个视频加上本篇文章，视频用来介绍，文章用来标记重点。以及方便大家访问相关网址。</p></blockquote><p>写在前面的话，学会使用电脑并不是一件很难的事情，但是因为有点复杂，且对于新手而言，不知道如何获取资料，加剧了这一个难度。</p><p>请耐心且细心，一定可以学会使用电脑的。</p><h2 id="如何解决电脑问题？"><a href="#如何解决电脑问题？" class="headerlink" title="如何解决电脑问题？"></a>如何解决电脑问题？</h2><p>因为电脑本身的构造比较复杂，所以出现问题时，一些只言片语很难定位问题，一定要先把问题描述清楚。<br>能够把问题描述清楚后，再去搜索引擎搜索出现问题的原因。</p><ol><li>上网搜索</li><li>软件自带帮助(F1)</li><li>询问别人</li></ol><h2 id="电脑组成说明"><a href="#电脑组成说明" class="headerlink" title="电脑组成说明"></a>电脑组成说明</h2><p>电脑有多种形态，对于普通的大众来说，最常用的有两种，一种是笔记本，另一种是台式机。<br>下面以台式机和笔记本举例：<br>输入部分：触摸板、键盘、鼠标<br>输出部分：屏幕<br>主机部分：一般来说就是键盘下面的部分，里面有 CPU，内存，硬盘等部件。</p><pre><code class=" mermaid">flowchart LR  A[&quot;电脑&quot;]  B[&quot;主机&quot;]  C[&quot;键鼠&quot;]  D[&quot;显示&quot;]  E[&quot;CPU：中央处理器&quot;]  F[&quot;GPU：图形处理器&quot;]  G[&quot;RAM: 内存&quot;]  H[&quot;ROM: 硬盘&quot;]  A ----&gt; C  A ----&gt; B  A ----&gt; D B ----&gt; E B ----&gt; F B ----&gt; G B ----&gt; H</code></pre><h2 id="认识键盘和鼠标"><a href="#认识键盘和鼠标" class="headerlink" title="认识键盘和鼠标"></a>认识键盘和鼠标</h2><p><a href="https://www.zhihu.com/tardis/zm/art/79346714?source_id=1005">键盘教程</a></p><p><a href="https://zhuanlan.zhihu.com/p/41562978">鼠标操作</a></p><h2 id="Windows-系统介绍"><a href="#Windows-系统介绍" class="headerlink" title="Windows 系统介绍"></a>Windows 系统介绍</h2><h3 id="系统自带功能"><a href="#系统自带功能" class="headerlink" title="系统自带功能"></a>系统自带功能</h3><p><a href="https://support.microsoft.com/zh-cn/windows/windows-%E7%9A%84%E9%94%AE%E7%9B%98%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F-dcc61a57-8ff0-cffe-9796-cb9706c75eec">Windows 系统快捷键</a></p><table><thead><tr><th>功能</th><th>快捷键</th><th>说明</th></tr></thead><tbody><tr><td>截图</td><td>Win+PtrSC 或者 Win+Shift+s</td><td></td></tr><tr><td>磁盘管理</td><td>Win+x,K</td><td>硬盘，U 盘等存储设备</td></tr><tr><td>设备管理器</td><td>Win+x,M</td><td>电脑与插到电脑上的设备</td></tr><tr><td>搜索功能</td><td>Win+S</td><td>单击 Win 键也可以</td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h2 id="常用软件介绍"><a href="#常用软件介绍" class="headerlink" title="常用软件介绍"></a>常用软件介绍</h2><h3 id="文件资源管理器"><a href="#文件资源管理器" class="headerlink" title="文件资源管理器"></a>文件资源管理器</h3><table><thead><tr><th>功能</th><th>快捷键</th><th>说明</th></tr></thead><tbody><tr><td>打开文件资源管理器</td><td>Win+E</td><td>助记:E 是 Explore 的缩写</td></tr><tr><td>关闭标签页</td><td>Ctrl+W</td><td></td></tr><tr><td>创建标签页</td><td>Ctrl+T</td><td></td></tr><tr><td>复制粘贴文件</td><td>Ctrl+C&#x2F;V</td><td>复制文件</td></tr><tr><td>剪切粘贴文件</td><td>Ctrl+X&#x2F;V</td><td>移动文件</td></tr></tbody></table><h3 id="网络浏览器"><a href="#网络浏览器" class="headerlink" title="网络浏览器"></a>网络浏览器</h3><ol><li>Edge 浏览器，系统自带。</li><li><a href="https://www.google.cn/chrome/?hl=zh-CN&standalone=1">Chrome</a></li><li><a href="https://www.mozilla.org/zh-CN/firefox/all/#product-desktop-release">FireFox</a></li></ol><h3 id="压缩解压软件"><a href="#压缩解压软件" class="headerlink" title="压缩解压软件"></a>压缩解压软件</h3><ol><li><a href="https://www.7-zip.org/download.html">7Z</a></li><li>系统自带</li></ol><h3 id="文档编辑"><a href="#文档编辑" class="headerlink" title="文档编辑"></a>文档编辑</h3><ol><li>Office</li><li>WPS</li><li>Adobe Acrobat DC (PDF 阅读编辑工具)</li></ol><h3 id="网盘同步软件"><a href="#网盘同步软件" class="headerlink" title="网盘同步软件"></a>网盘同步软件</h3><ol><li>WSP 云(搭配文档同步使用)</li><li>百度云(用来下载资源)</li></ol><h2 id="好用软件推荐"><a href="#好用软件推荐" class="headerlink" title="好用软件推荐"></a>好用软件推荐</h2><ul><li><a href="https://www.voidtools.com/downloads/">EveryThing</a>搜索电脑中的文件</li><li><a href="https://geekuninstaller.com/">geek</a>卸载程序</li><li><a href="https://sourceforge.net/projects/freeplane/">Freeplane</a>思维导图</li><li><a href="https://excalidraw.com/">excalidraw</a>草图绘制网页</li></ul>]]></content>
    
    
    <categories>
      
      <category>Windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>入门教程</tag>
      
      <tag>Windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python相关知识</title>
    <link href="/2024/08/12/Python%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/"/>
    <url>/2024/08/12/Python%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<p>pyenv-win 命令列表<br>安装命令</p><pre><code class="hljs">pyenv install &lt;version&gt;：安装指定版本的Python。pyenv uninstall &lt;version&gt;：卸载指定版本的Python。pyenv rehash：重新生成shims和重新加载环境变量。</code></pre><p>版本管理命令</p><pre><code class="hljs">pyenv versions：列出所有已安装的Python版本。pyenv version：显示当前激活的Python版本。pyenv global &lt;version&gt;：设置全局Python版本。pyenv local &lt;version&gt;：在当前目录设置局部Python版本。pyenv shell &lt;version&gt;：在当前shell中设置Python版本。pyenv which &lt;command&gt;：显示指定命令所对应的Python解释器路径。</code></pre><p>其他命令</p><pre><code class="hljs">pyenv exec &lt;command&gt;：在特定版本的Python环境中执行命令。pyenv virtualenv &lt;version&gt; &lt;name&gt;：创建一个新的虚拟环境。pyenv activate &lt;name&gt;：激活指定名称的虚拟环境。pyenv deactivate：停用当前虚拟环境。</code></pre><p>注意事项</p><pre><code class="hljs">在使用pyenv之前，请确保已经正确安装并配置好了Python环境。使用虚拟环境可以帮助您在不同项目之间隔离Python依赖。使用pyenv global、pyenv local和pyenv shell可以轻松管理不同版本的Python。</code></pre><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sh">[System.Environment]::SetEnvironmentVariable(<span class="hljs-string">&#x27;PYENV&#x27;</span>,<span class="hljs-string">&quot;C:\sw&quot;</span> + <span class="hljs-string">&quot;\.pyenv\pyenv-win\&quot;,&quot;</span>User<span class="hljs-string">&quot;)</span><br><span class="hljs-string">[System.Environment]::SetEnvironmentVariable(&#x27;PYENV_ROOT&#x27;,&quot;</span>C:\sw<span class="hljs-string">&quot; + &quot;</span>\.pyenv\pyenv-win\&quot;,<span class="hljs-string">&quot;User&quot;</span>)<br>[System.Environment]::SetEnvironmentVariable(<span class="hljs-string">&#x27;PYENV_HOME&#x27;</span>,<span class="hljs-string">&quot;C:\sw&quot;</span> + <span class="hljs-string">&quot;\.pyenv\pyenv-win\&quot;,&quot;</span>User<span class="hljs-string">&quot;)</span><br><span class="hljs-string">[System.Environment]::SetEnvironmentVariable(&#x27;path&#x27;, &quot;</span>C:\sw<span class="hljs-string">&quot; + &quot;</span>\.pyenv\pyenv-win\bin;<span class="hljs-string">&quot; + &quot;</span>C:\sw<span class="hljs-string">&quot; + &quot;</span>\.pyenv\pyenv-win\shims;<span class="hljs-string">&quot; + [System.Environment]::GetEnvironmentVariable(&#x27;path&#x27;, &quot;</span>User<span class="hljs-string">&quot;),&quot;</span>User<span class="hljs-string">&quot;)</span><br><span class="hljs-string">Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser</span><br><span class="hljs-string">Unblock-File (Join-Path <span class="hljs-variable">$env</span>:PYENV &#x27;bin/pyenv.ps1&#x27;)</span><br><span class="hljs-string">pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="hljs-string">poetry source add tsinghua https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="hljs-string">yadm工具了解一下，并且使用上。</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>markdown入门</title>
    <link href="/2024/08/12/markdown%E5%85%A5%E9%97%A8/"/>
    <url>/2024/08/12/markdown%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<h3 id="markdown"><a href="#markdown" class="headerlink" title="markdown"></a>markdown</h3><div STYLE="page-break-after: always;"></div> <!-- 插入换页符号 --><p>代码添加行数</p><figure class="highlight c"><figcaption><span>&#123;.numberLines startFrom</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs C"><br></code></pre></td></tr></table></figure><pre><code class=" mermaid">sequenceDiagram  participant BT  participant Register  participant DSP  BT   -&gt;&gt; Register : bit0 = 1  BT  --&gt;&gt; DSP      : trigger interrupt  BT   -&gt;&gt; Register : bit1 = 1  DSP --&gt;&gt; Register : read 11,and write 11  BT --&gt;&gt; DSP      : trigger interrupt  DSP --&gt;&gt; Register : read 00,error?</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>markdown</tag>
      
      <tag>标记语言</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>专业软件使用</title>
    <link href="/2024/08/12/%E4%B8%93%E4%B8%9A%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    <url>/2024/08/12/%E4%B8%93%E4%B8%9A%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="专业软件使用"><a href="#专业软件使用" class="headerlink" title="专业软件使用"></a>专业软件使用</h1><p><img src="git.jpg" alt="alt text"></p><h2 id="keil"><a href="#keil" class="headerlink" title="keil"></a>keil</h2><p><code>fromelf.exe --bin --output=@L.bin !L=</code></p><h3 id="Segger-Embedded-Studio"><a href="#Segger-Embedded-Studio" class="headerlink" title="Segger Embedded Studio"></a>Segger Embedded Studio</h3><p><code>Tools-&gt;Options-&gt;Text Editor-&gt; visual appearance</code> 修改字体渲染为“proportional” 即可。<br><code>Tools-&gt;Options-&gt;Text Editor-&gt; Formatting</code> 修改 Align Consecutive Assignments 为“yes”。</p>]]></content>
    
    
    
    <tags>
      
      <tag>软件教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>FPGA入门教程</title>
    <link href="/2024/08/11/FPGA%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/"/>
    <url>/2024/08/11/FPGA%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h1 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h1><h1 id="问答"><a href="#问答" class="headerlink" title="问答"></a>问答</h1><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><h2 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h2><p>Linux 无法安装，显示 javaxx 错误。执行<code>xhost  \+</code></p><p>安装过程中卡住,是因为缺少库，按照下面的方法进行安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get install libtinfo6 libncurses6 libncursesw6 libncurses-dev libncursesw-dev<br>sudo <span class="hljs-built_in">ln</span> -s /lib/x86_64-linux-gnu/libtinfo.so.6 /lib/x86_64-linux-gnu/libtinfo.so.5<br></code></pre></td></tr></table></figure><p><a href="https://support.xilinx.com/s/article/76616?language=en_US&topicId=0TO2E000000YKXwWAO&topicName=Installation%20And%20Licensing">解决方案来源</a></p><p>安装完成后，执行下方命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 刷新：添加路径</span><br><span class="hljs-built_in">source</span> /tools/Xilinx/Vivado/2023.2/settings64.sh<br><span class="hljs-comment"># 安装驱动</span><br><span class="hljs-built_in">cd</span> /tools/Xilinx/Vivado/2023.2/data/xicom/cable_drivers/lin64/install_script/install_drivers<br>sudo ./install_drivers<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>FPGA</category>
      
    </categories>
    
    
    <tags>
      
      <tag>FPGA</tag>
      
      <tag>入门教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux常用脚本</title>
    <link href="/2024/08/11/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%B8%8E%E8%84%9A%E6%9C%AC/"/>
    <url>/2024/08/11/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%B8%8E%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<h1 id="常用脚本"><a href="#常用脚本" class="headerlink" title="常用脚本"></a>常用脚本</h1><h2 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><br><span class="hljs-comment"># 升级系统</span><br>UPDATE_SYSTEM=<span class="hljs-literal">true</span><br><br><span class="hljs-comment"># 安装常用软件</span><br>INSTALL_SOFTWARE=<span class="hljs-literal">true</span><br><br><span class="hljs-comment"># 安装xfce4</span><br>INSTALL_XFCE=<span class="hljs-literal">true</span><br><br><span class="hljs-comment"># 安装并配置远程桌面</span><br>INSTALL_XRDP=<span class="hljs-literal">true</span><br><br><span class="hljs-comment"># 更新系统</span><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$UPDATE_SYSTEM</span>&quot;</span> = <span class="hljs-literal">true</span> ]; <span class="hljs-keyword">then</span><br>    sudo apt update &amp;&amp; sudo apt upgrade -y<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment"># 安装常用软件</span><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$INSTALL_SOFTWARE</span>&quot;</span> = <span class="hljs-literal">true</span> ]; <span class="hljs-keyword">then</span><br>    sudo apt install -y vim   build-essential<br>    sudo apt install -y git wget neofetch<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment"># 安装xfce4</span><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$INSTALL_XFCE</span>&quot;</span> = <span class="hljs-literal">true</span> ]; <span class="hljs-keyword">then</span><br>    sudo apt install -y xrdp xfce4<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment"># 安装并配置远程桌面</span><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$INSTALL_XRDP</span>&quot;</span> = <span class="hljs-literal">true</span> ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-comment"># Configure XRDP to use Xfce</span><br>    sudo sed -i <span class="hljs-string">&#x27;s/^test -x/#test -x/&#x27;</span> /etc/xrdp/startwm.sh<br>    sudo bash -c <span class="hljs-string">&#x27;echo &quot;startxfce4&quot; &gt;&gt; /etc/xrdp/startwm.sh&#x27;</span><br>    <span class="hljs-comment"># Restart XRDP service</span><br>    sudo systemctl restart xrdp<br>    <span class="hljs-comment"># Enable XRDP to start on boot</span><br>    sudo systemctl <span class="hljs-built_in">enable</span> xrdp<br>    <span class="hljs-comment"># Allow RDP connections through the firewall</span><br>    sudo ufw allow 3389/tcp<br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;XRDP installation and configuration completed.&quot;</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment">#</span><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$INSTALL_TEXLIVE_FULL</span>&quot;</span> = <span class="hljs-literal">true</span> ]; <span class="hljs-keyword">then</span><br>    sudo apt install texlive-full fonts-wqy-zenhei<br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Python语言常用脚本</title>
    <link href="/2024/08/11/Python%E5%B8%B8%E7%94%A8%E8%84%9A%E6%9C%AC/"/>
    <url>/2024/08/11/Python%E5%B8%B8%E7%94%A8%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<h1 id="Python-常用脚本"><a href="#Python-常用脚本" class="headerlink" title="Python 常用脚本"></a>Python 常用脚本</h1><h2 id="CH341A-模块"><a href="#CH341A-模块" class="headerlink" title="CH341A 模块"></a>CH341A 模块</h2><h2 id="FTDI-模块"><a href="#FTDI-模块" class="headerlink" title="FTDI 模块"></a>FTDI 模块</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> ft4222<br><span class="hljs-keyword">import</span> ft4222.I2CMaster<br><span class="hljs-comment"># 需要在命令行使用以下命令，安装库</span><br><span class="hljs-comment"># pip install ft4222</span><br><span class="hljs-comment"># list devices</span><br>nbDev = ft4222.createDeviceInfoList()<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(nbDev):<br>    <span class="hljs-built_in">print</span>(ft4222.getDeviceInfoDetail(i, <span class="hljs-literal">False</span>))<br></code></pre></td></tr></table></figure><h1 id="python-venv"><a href="#python-venv" class="headerlink" title="python venv"></a>python venv</h1><p>这是 Python 自带的包管理器，下面介绍常用命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 创建环境</span><br>python -m venv /path/to/your/venv<br><span class="hljs-comment"># 激活环境 Windows</span><br>/path/to/your/venv/Scripts/activate<br><span class="hljs-comment"># 激活环境 Linux</span><br><span class="hljs-built_in">source</span> /path/to/your/venv/bin/activate<br><span class="hljs-comment"># 退出环境</span><br>deactivate<br></code></pre></td></tr></table></figure><h1 id="pip-set"><a href="#pip-set" class="headerlink" title="pip set"></a>pip set</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 导出包</span><br>pip freeze &gt; requirements.txt<br><span class="hljs-comment"># 导入包</span><br>pip install -r requirements.txt<br><span class="hljs-comment"># pip 安装到指定路径</span><br>pip install package_name -t /path/to/your/directory<br></code></pre></td></tr></table></figure><h1 id="pip-package-list"><a href="#pip-package-list" class="headerlink" title="pip package list"></a>pip package list</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install vcdvcd<br>pip install python-lsp-server<br></code></pre></td></tr></table></figure><p>文档</p><p><a href="https://docs.python.org/zh-cn/3/download.html">https://docs.python.org/zh-cn/3/download.html</a></p><p><a href="https://peps.python.org/">https://peps.python.org/</a></p><h1 id="LearnPython"><a href="#LearnPython" class="headerlink" title="LearnPython"></a>LearnPython</h1><h2 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h2><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install pyelftools PySimpleGUI lxml numpy chardet scipy matplotlib<br>pip install pyvisa pandas shutil<br>pip install shutil openpyxl<br><br></code></pre></td></tr></table></figure><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment"># 用来暂停</span><br>os.system(<span class="hljs-string">&quot;pause&quot;</span>)<br></code></pre></td></tr></table></figure><h2 id="打包应用"><a href="#打包应用" class="headerlink" title="打包应用"></a>打包应用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># -F 表示 打包为单个文件</span><br><span class="hljs-comment"># -w 表示为没有控制台</span><br><span class="hljs-comment"># -i .\favicon.ico 添加应用图标</span><br>pyinstaller.exe -F -w -i .\favicon.ico .\test.py<br></code></pre></td></tr></table></figure><h1 id="wav-250"><a href="#wav-250" class="headerlink" title="wav 250"></a>wav 250</h1><p>import wave<br>import math<br>import array</p><h1 id="音频参数"><a href="#音频参数" class="headerlink" title="音频参数"></a>音频参数</h1><p>sample_rate &#x3D; 44100 # 采样频率<br>duration &#x3D; 60*10 # 音频时长（秒）</p><h1 id="创建一个新的-WAV-文件"><a href="#创建一个新的-WAV-文件" class="headerlink" title="创建一个新的 WAV 文件"></a>创建一个新的 WAV 文件</h1><p>output_file &#x3D; wave.open(‘output.wav’, ‘w’)<br>output_file.setnchannels(1) # 单声道<br>output_file.setsampwidth(2) # 2 字节，16 位<br>output_file.setframerate(sample_rate)</p><h1 id="生成-250Hz-的音频数据"><a href="#生成-250Hz-的音频数据" class="headerlink" title="生成 250Hz 的音频数据"></a>生成 250Hz 的音频数据</h1><p>samples &#x3D; array.array(‘h’, [0] _ (sample_rate _ duration))<br>amplitude &#x3D; 2 ** 15 - 1 # 振幅</p><p>for i in range(len(samples)):<br>t &#x3D; float(i) &#x2F; sample*rate # 当前时间（秒）<br>samples[i] &#x3D; int(amplitude * math.sin(2 _ math.pi _ 250 _ t))</p><h1 id="将音频数据写入-WAV-文件"><a href="#将音频数据写入-WAV-文件" class="headerlink" title="将音频数据写入 WAV 文件"></a>将音频数据写入 WAV 文件</h1><p>output_file.writeframes(samples)</p><h1 id="关闭-WAV-文件"><a href="#关闭-WAV-文件" class="headerlink" title="关闭 WAV 文件"></a>关闭 WAV 文件</h1><p>output_file.close()</p><p>import numpy as np<br>from scipy.io import wavfile<br>import wave</p><p>def generate<em>sine_wave(freq, duration, filename): # 采样率<br>sample_rate &#x3D; 44100 # 生成时间轴<br>t &#x3D; np.linspace(0, duration, int(duration * sample</em>rate), endpoint&#x3D;False) # 生成正弦波信号<br>wave_data &#x3D; np.sin(2 * np.pi _ freq _ t) # 将信号归一化到 16 位范围内<br>wave_data_normalized &#x3D; (wave_data * 32767).astype(np.int16)</p><pre><code class="hljs"># 创建并保存wav文件with wave.open(filename, &#39;wb&#39;) as wav_file:    wav_file.setnchannels(1)  # 设置为单声道    wav_file.setsampwidth(2)  # 设置采样大小为2字节（16位）    wav_file.setframerate(sample_rate)  # 设置采样率    wav_file.writeframes(wave_data_normalized.tobytes())</code></pre><h1 id="示例：生成-1000Hz-频率，持续-2-秒的正弦波-wav-文件"><a href="#示例：生成-1000Hz-频率，持续-2-秒的正弦波-wav-文件" class="headerlink" title="示例：生成 1000Hz 频率，持续 2 秒的正弦波 wav 文件"></a>示例：生成 1000Hz 频率，持续 2 秒的正弦波 wav 文件</h1><p>generate_sine_wave(1000, 2, “sine_wave.wav”)</p><h1 id="Excel"><a href="#Excel" class="headerlink" title="Excel"></a>Excel</h1><p>import as xl<br>workbook &#x3D; xl.load_workbook(filename&#x3D;”D:\Documents\aa.xlsx”)<br>workbook.sheetnames</p><h1 id="pip"><a href="#pip" class="headerlink" title="pip"></a>pip</h1><p>方法一： 打开网址,<a href="https://pypi.org/project/pip/#files">https://pypi.org/project/pip/#files</a></p><p>然后下载源码，解压，打开命令行，输入命令<code>python setup.py install</code></p><p>输入<code>pip --version</code>，查看是否安装成功</p><p>方法二： 打开终端，执行<code>py get-pip.py</code></p><p>安装模块: <code>pip install module-name</code> 例如： <code>pip install pyelftools</code></p><ul><li>juypter</li><li>pillow</li><li>requests</li><li>pyinstaller</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 参数解释： F只产生一个exe，w是不使用控制台,i是图标</span><br>pyinstaller  -i xxx.icon -Fw demo.py<br></code></pre></td></tr></table></figure><h1 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h1><p>Q: 指定版本运行脚本？<br>A: <code>py -3.7 a.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment">#</span><br><span class="hljs-keyword">import</span> PySimpleGUI <span class="hljs-keyword">as</span> sg<br>layout = [[sg.Text(<span class="hljs-string">&#x27;Your typed chars appear here:&#x27;</span>), sg.Text(size=(<span class="hljs-number">15</span>,<span class="hljs-number">1</span>), key=<span class="hljs-string">&#x27;-OUTPUT-&#x27;</span>)],<br>          [sg.Input(key=<span class="hljs-string">&#x27;-IN-&#x27;</span>)],<br>          [sg.Button(<span class="hljs-string">&#x27;Show&#x27;</span>), sg.Button(<span class="hljs-string">&#x27;Exit&#x27;</span>)]]<br><br>window = sg.Window(<span class="hljs-string">&#x27;Test&#x27;</span>, layout)<br><br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:  <span class="hljs-comment"># Event Loop</span><br>    event, values = window.read()<br>    <span class="hljs-built_in">print</span>(event, values)<br>    <span class="hljs-keyword">if</span> event <span class="hljs-keyword">in</span>  (<span class="hljs-literal">None</span>, <span class="hljs-string">&#x27;Exit&#x27;</span>):<br>        <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">if</span> event == <span class="hljs-string">&#x27;Show&#x27;</span>:<br>        <span class="hljs-comment"># Update the &quot;output&quot; text element to be the value of &quot;input&quot; element</span><br>        window[<span class="hljs-string">&#x27;-OUTPUT-&#x27;</span>].update(values[<span class="hljs-string">&#x27;-IN-&#x27;</span>])<br><br>window.close()<br><span class="hljs-comment">#</span><br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> re<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">batch_rename_files</span>(<span class="hljs-params">directory, regex_pattern, new_text</span>):<br>    <span class="hljs-keyword">for</span> filename <span class="hljs-keyword">in</span> os.listdir(directory):<br>        <span class="hljs-keyword">if</span> re.<span class="hljs-keyword">match</span>(regex_pattern, filename):<br>            new_filename = re.sub(regex_pattern, new_text, filename)<br>            os.rename(os.path.join(directory, filename), os.path.join(directory, new_filename))<br><br><span class="hljs-comment"># 指定目录和正则表达式</span><br>directory = <span class="hljs-string">&quot;D:/aaaa&quot;</span><br>regex_pattern = <span class="hljs-string">r&#x27;FPGA_240109b(.*)&#x27;</span><br>new_text = <span class="hljs-string">r&#x27;FPGA_240109(-3_6)\1&#x27;</span>   <span class="hljs-comment">#\1指保留其他部分不变</span><br><br><span class="hljs-comment"># 执行批量重命名</span><br>batch_rename_files(directory, regex_pattern, new_text)<br><br><br><span class="hljs-comment"># 生成指定的bin</span><br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> binascii<br><span class="hljs-keyword">import</span> random<br><br>file_path = <span class="hljs-string">&#x27;example.bin&#x27;</span><br><span class="hljs-comment"># file_size = 0x3150</span><br>file_size = <span class="hljs-number">1024</span>*<span class="hljs-number">8</span><br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(file_path, <span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    remaining_bytes = file_size<br>    buffer_size = <span class="hljs-number">1024</span>  <span class="hljs-comment"># 每次写入的字节数</span><br>    <span class="hljs-keyword">while</span> remaining_bytes &gt; <span class="hljs-number">0</span>:<br>        buffer = <span class="hljs-built_in">bytearray</span>(random.getrandbits(<span class="hljs-number">8</span>) <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">min</span>(buffer_size, remaining_bytes)))<br>        f.write(buffer)<br>        remaining_bytes -= buffer_size<br><br><span class="hljs-comment"># 音量</span><br><span class="hljs-keyword">import</span> PyAutoGUI<br><span class="hljs-keyword">import</span> time<br><br><span class="hljs-keyword">while</span> <span class="hljs-number">1</span>:<br>    pyautogui.press(<span class="hljs-string">&#x27;volumeup&#x27;</span>)    <span class="hljs-comment">#调大音量</span><br>    time.sleep(<span class="hljs-number">5</span>)<br>    pyautogui.press(<span class="hljs-string">&#x27;volumedown&#x27;</span>) <span class="hljs-comment">#调小音量</span><br>    time.sleep(<span class="hljs-number">5</span>)<br><span class="hljs-comment">#pyautogui.press(&#x27;volumemute&#x27;) #静音</span><br><br><span class="hljs-comment"># 图形化</span><br><span class="hljs-keyword">import</span> PySimpleGUI <span class="hljs-keyword">as</span> sg<br><span class="hljs-comment"># sg.popup(&#x27;demo ok&#x27;)</span><br><span class="hljs-comment"># sg.popup_ok_cancel(&#x27;PopupOKCancel&#x27;)</span><br><span class="hljs-comment"># sg.popup_error(&#x27;PopupError&#x27;)  # Shows red error button</span><br><span class="hljs-comment"># sg.popup_timed(&#x27;PopupTimed&#x27;)  # Automatically closes</span><br><span class="hljs-comment"># 例子：</span><br>text = sg.popup_get_file(<span class="hljs-string">&#x27;Please enter a file name&#x27;</span>)<br><br><br><span class="hljs-keyword">import</span> PySimpleGUI <span class="hljs-keyword">as</span> sg<br><span class="hljs-keyword">import</span> json<br>sg.set_options(font=(<span class="hljs-string">&#x27;Arial Bold&#x27;</span>, <span class="hljs-number">16</span>))<br>layout = [<br>   [sg.Text(<span class="hljs-string">&#x27;Settings&#x27;</span>, justification=<span class="hljs-string">&#x27;left&#x27;</span>)],<br>   [sg.Text(<span class="hljs-string">&#x27;User name&#x27;</span>, size=(<span class="hljs-number">10</span>, <span class="hljs-number">1</span>), expand_x=<span class="hljs-literal">True</span>),<br>   sg.Input(key=<span class="hljs-string">&#x27;-USER-&#x27;</span>)],<br>   [sg.Text(<span class="hljs-string">&#x27;email ID&#x27;</span>, size=(<span class="hljs-number">10</span>, <span class="hljs-number">1</span>), expand_x=<span class="hljs-literal">True</span>),<br>   sg.Input(key=<span class="hljs-string">&#x27;-ID-&#x27;</span>)],<br>   [sg.Text(<span class="hljs-string">&#x27;Role&#x27;</span>, size=(<span class="hljs-number">10</span>, <span class="hljs-number">1</span>), expand_x=<span class="hljs-literal">True</span>),<br>   sg.Input(key=<span class="hljs-string">&#x27;-ROLE-&#x27;</span>)],<br>   [sg.Button(<span class="hljs-string">&quot;LOAD&quot;</span>), sg.Button(<span class="hljs-string">&#x27;SAVE&#x27;</span>), sg.Button(<span class="hljs-string">&#x27;Exit&#x27;</span>)]<br>]<br>window = sg.Window(<span class="hljs-string">&#x27;User Settings Demo&#x27;</span>, layout, size=(<span class="hljs-number">715</span>, <span class="hljs-number">200</span>))<br><span class="hljs-comment"># Event Loop</span><br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>   event, values = window.read()<br>   <span class="hljs-keyword">if</span> event <span class="hljs-keyword">in</span> (sg.WIN_CLOSED, <span class="hljs-string">&#x27;Exit&#x27;</span>):<br>      <span class="hljs-keyword">break</span><br>   <span class="hljs-keyword">if</span> event == <span class="hljs-string">&#x27;LOAD&#x27;</span>:<br>      f = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;settings.txt&quot;</span>, <span class="hljs-string">&#x27;r&#x27;</span>)<br>      settings = json.load(f)<br>      window[<span class="hljs-string">&#x27;-USER-&#x27;</span>].update(value=settings[<span class="hljs-string">&#x27;-USER-&#x27;</span>])<br>      window[<span class="hljs-string">&#x27;-ID-&#x27;</span>].update(value=settings[<span class="hljs-string">&#x27;-ID-&#x27;</span>])<br>      window[<span class="hljs-string">&#x27;-ROLE-&#x27;</span>].update(value=settings[<span class="hljs-string">&#x27;-ROLE-&#x27;</span>])<br>   <span class="hljs-keyword">if</span> event == <span class="hljs-string">&#x27;SAVE&#x27;</span>:<br>      settings = &#123;<span class="hljs-string">&#x27;-USER-&#x27;</span>: values[<span class="hljs-string">&#x27;-USER-&#x27;</span>],<br>      <span class="hljs-string">&#x27;-ID-&#x27;</span>: values[<span class="hljs-string">&#x27;-ID-&#x27;</span>],<br>      <span class="hljs-string">&#x27;-ROLE-&#x27;</span>: values[<span class="hljs-string">&#x27;-ROLE-&#x27;</span>]&#125;<br>      f = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;settings.txt&quot;</span>, <span class="hljs-string">&#x27;w&#x27;</span>)<br>      json.dump(settings, f)<br>      f.close()<br>window.close()<br><br><br><br><br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> matplotlib.backends.backend_tkagg <span class="hljs-keyword">import</span> FigureCanvasTkAgg<br><span class="hljs-keyword">import</span> PySimpleGUI <span class="hljs-keyword">as</span> sg<br><span class="hljs-keyword">import</span> matplotlib<br>matplotlib.use(<span class="hljs-string">&#x27;TkAgg&#x27;</span>)<br>fig = matplotlib.figure.Figure(figsize=(<span class="hljs-number">5</span>, <span class="hljs-number">4</span>), dpi=<span class="hljs-number">100</span>)<br>t = np.arange(<span class="hljs-number">0</span>, <span class="hljs-number">3</span>, <span class="hljs-number">.01</span>)<br>fig.add_subplot(<span class="hljs-number">111</span>).plot(t, <span class="hljs-number">2</span> * np.sin(<span class="hljs-number">2</span> * np.pi * t))<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">draw_figure</span>(<span class="hljs-params">canvas, figure</span>):<br>   tkcanvas = FigureCanvasTkAgg(figure, canvas)<br>   tkcanvas.draw()<br>   tkcanvas.get_tk_widget().pack(side=<span class="hljs-string">&#x27;top&#x27;</span>, fill=<span class="hljs-string">&#x27;both&#x27;</span>, expand=<span class="hljs-number">1</span>)<br>   <span class="hljs-keyword">return</span> tkcanvas<br>layout = [[sg.Text(<span class="hljs-string">&#x27;Plot test&#x27;</span>)],<br>   [sg.Canvas(key=<span class="hljs-string">&#x27;-CANVAS-&#x27;</span>)],<br>   [sg.Button(<span class="hljs-string">&#x27;Ok&#x27;</span>)]]<br>window = sg.Window(<span class="hljs-string">&#x27;Matplotlib In PySimpleGUI&#x27;</span>, layout, size=(<span class="hljs-number">715</span>, <span class="hljs-number">500</span>), finalize=<span class="hljs-literal">True</span>, element_justification=<span class="hljs-string">&#x27;center&#x27;</span>, font=<span class="hljs-string">&#x27;Helvetica 18&#x27;</span>)<br><br><span class="hljs-comment"># add the plot to the window</span><br>tkcanvas = draw_figure(window[<span class="hljs-string">&#x27;-CANVAS-&#x27;</span>].TKCanvas, fig)<br>event, values = window.read()<br>window.close()<br><br><br><span class="hljs-keyword">import</span> PySimpleGUI <span class="hljs-keyword">as</span> psg<br>psg.set_options(font=(<span class="hljs-string">&#x27;Arial Bold&#x27;</span>, <span class="hljs-number">16</span>))<br>layout = [<br>   [psg.Text(<span class="hljs-string">&#x27;Enter a num: &#x27;</span>), psg.Input(key=<span class="hljs-string">&#x27;-FIRST-&#x27;</span>)],<br>   [psg.Text(<span class="hljs-string">&#x27;Enter a num: &#x27;</span>), psg.Input(key=<span class="hljs-string">&#x27;-SECOND-&#x27;</span>)],<br>   [psg.Text(<span class="hljs-string">&#x27;Result : &#x27;</span>), psg.Text(key=<span class="hljs-string">&#x27;-OUT-&#x27;</span>)],<br>   [psg.Button(<span class="hljs-string">&quot;Add&quot;</span>), psg.Button(<span class="hljs-string">&quot;Sub&quot;</span>), psg.Exit()],<br>]<br>window = psg.Window(<span class="hljs-string">&#x27;Calculato1r&#x27;</span>, layout, size=(<span class="hljs-number">715</span>, <span class="hljs-number">180</span>))<br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>   event, values = window.read()<br>   <span class="hljs-built_in">print</span>(event, values)<br>   <span class="hljs-keyword">if</span> event == <span class="hljs-string">&quot;Add&quot;</span>:<br>      result = <span class="hljs-built_in">int</span>(values[<span class="hljs-string">&#x27;-FIRST-&#x27;</span>]) + <span class="hljs-built_in">int</span>(values[<span class="hljs-string">&#x27;-SECOND-&#x27;</span>])<br>   <span class="hljs-keyword">if</span> event == <span class="hljs-string">&quot;Sub&quot;</span>:<br>      result = <span class="hljs-built_in">int</span>(values[<span class="hljs-string">&#x27;-FIRST-&#x27;</span>]) - <span class="hljs-built_in">int</span>(values[<span class="hljs-string">&#x27;-SECOND-&#x27;</span>])<br>   window[<span class="hljs-string">&#x27;-OUT-&#x27;</span>].update(result)<br>   <span class="hljs-keyword">if</span> event == psg.WIN_CLOSED <span class="hljs-keyword">or</span> event == <span class="hljs-string">&#x27;Exit&#x27;</span>:<br>      <span class="hljs-keyword">break</span><br>window.close()<br><br><span class="hljs-keyword">import</span> PySimpleGUI <span class="hljs-keyword">as</span> sg<br><br><span class="hljs-comment"># 定义布局</span><br>layout = [[sg.Text(<span class="hljs-string">&#x27;Hello PySimpleGUI!&#x27;</span>)],<br>          [sg.Button(<span class="hljs-string">&#x27;OK&#x27;</span>)],<br>          [sg.Button(<span class="hljs-string">&#x27;continue&#x27;</span>)]]<br><br><span class="hljs-comment"># 创建窗口</span><br>window = sg.Window(<span class="hljs-string">&#x27;aa&#x27;</span>, layout,icon = <span class="hljs-string">&#x27;edit_icon.ico&#x27;</span>)<br><br><span class="hljs-comment"># 事件循环</span><br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    event, values = window.read()<br><br>    <span class="hljs-keyword">if</span> event == sg.WINDOW_CLOSED <span class="hljs-keyword">or</span> event == <span class="hljs-string">&#x27;OK&#x27;</span>:<br>        <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">elif</span> event == <span class="hljs-string">&#x27;continue&#x27;</span>:<br>        sg.popup(<span class="hljs-string">&quot;aaaaaaaaaaaaaa&quot;</span>)<br><br><span class="hljs-comment"># 关闭窗口</span><br>window.close()<br><br><span class="hljs-keyword">import</span> PySimpleGUI <span class="hljs-keyword">as</span> sg<br><span class="hljs-keyword">import</span> os<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>    <span class="hljs-comment"># 定义历史记录文件路径</span><br>    history_file = <span class="hljs-string">&#x27;history.txt&#x27;</span><br><br>    <span class="hljs-comment"># 创建布局</span><br>    layout = [<br>        [sg.Text(<span class="hljs-string">&#x27;File 1:&#x27;</span>), sg.InputText(key=<span class="hljs-string">&#x27;file1&#x27;</span>), sg.FileBrowse(initial_folder=get_last_path(history_file, <span class="hljs-number">0</span>))],<br>        [sg.Text(<span class="hljs-string">&#x27;File 2:&#x27;</span>), sg.InputText(key=<span class="hljs-string">&#x27;file2&#x27;</span>), sg.FileBrowse(initial_folder=get_last_path(history_file, <span class="hljs-number">1</span>))],<br>        [sg.Text(<span class="hljs-string">&#x27;File 3:&#x27;</span>), sg.InputText(key=<span class="hljs-string">&#x27;file3&#x27;</span>), sg.FileBrowse(initial_folder=get_last_path(history_file, <span class="hljs-number">2</span>))],<br>        [sg.Text(<span class="hljs-string">&#x27;File 4:&#x27;</span>), sg.InputText(key=<span class="hljs-string">&#x27;file4&#x27;</span>), sg.FileBrowse(initial_folder=get_last_path(history_file, <span class="hljs-number">3</span>))],<br>        [sg.Button(<span class="hljs-string">&#x27;OK&#x27;</span>)],<br>    ]<br><br>    <span class="hljs-comment"># 创建窗口</span><br>    window = sg.Window(<span class="hljs-string">&#x27;File Selector&#x27;</span>, layout)<br><br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        event, values = window.read()<br><br>        <span class="hljs-keyword">if</span> event == sg.WINDOW_CLOSED:<br>            <span class="hljs-keyword">break</span><br><br>        <span class="hljs-keyword">if</span> event == <span class="hljs-string">&#x27;OK&#x27;</span>:<br>            <span class="hljs-comment"># 保存历史记录</span><br>            save_history(history_file, values[<span class="hljs-string">&#x27;file1&#x27;</span>], values[<span class="hljs-string">&#x27;file2&#x27;</span>], values[<span class="hljs-string">&#x27;file3&#x27;</span>], values[<span class="hljs-string">&#x27;file4&#x27;</span>])<br><br>            <span class="hljs-comment"># 弹出消息框</span><br>            sg.popup(<span class="hljs-string">&#x27;Hello World!&#x27;</span>)<br>            <span class="hljs-keyword">break</span><br><br>    window.close()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_last_path</span>(<span class="hljs-params">history_file, index</span>):<br>    <span class="hljs-comment"># 从历史记录文件中获取上次保存的路径</span><br>    <span class="hljs-keyword">if</span> os.path.exists(history_file):<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(history_file, <span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>            history = file.readlines()<br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(history) &gt; index:<br>                <span class="hljs-keyword">return</span> history[index].strip()<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">save_history</span>(<span class="hljs-params">history_file, *paths</span>):<br>    <span class="hljs-comment"># 将当前选择的路径保存到历史记录文件中</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(history_file, <span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>        <span class="hljs-keyword">for</span> path <span class="hljs-keyword">in</span> paths:<br>            file.write(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;path&#125;</span>\n&#x27;</span>)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    main()<br><br><br><span class="hljs-keyword">import</span> PySimpleGUI <span class="hljs-keyword">as</span> sg<br><br>sg.theme(<span class="hljs-string">&#x27;Default1&#x27;</span>)   <span class="hljs-comment"># 设置当前主题</span><br><span class="hljs-comment"># 界面布局，将会按照列表顺序从上往下依次排列，二级列表中，从左往右依此排列</span><br>layout = [  [sg.Text(<span class="hljs-string">&#x27;Some text on Row 1&#x27;</span>)],<br>            [sg.Text(<span class="hljs-string">&#x27;Enter something on Row 2&#x27;</span>), sg.InputText()],<br>            [sg.Button(<span class="hljs-string">&#x27;Ok&#x27;</span>), sg.Button(<span class="hljs-string">&#x27;Cancel&#x27;</span>)] ]<br><br><span class="hljs-comment"># 创造窗口</span><br>window = sg.Window(<span class="hljs-string">&#x27;Window Title&#x27;</span>, layout)<br><span class="hljs-comment"># 事件循环并获取输入值</span><br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    event, values = window.read()<br>    <span class="hljs-keyword">if</span> event <span class="hljs-keyword">in</span> (<span class="hljs-literal">None</span>, <span class="hljs-string">&#x27;Cancel&#x27;</span>):   <span class="hljs-comment"># 如果用户关闭窗口或点击`Cancel`</span><br>        <span class="hljs-keyword">break</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;You entered &#x27;</span>, values[<span class="hljs-number">0</span>])<br><br>window.close()<br><br><br><span class="hljs-keyword">import</span> PySimpleGUI <span class="hljs-keyword">as</span> sg<br><br>layout = [[sg.Text(<span class="hljs-string">&#x27;My one-shot window.&#x27;</span>)],<br>                 [sg.InputText()],<br>                 [sg.Submit(), sg.Cancel()]]<br><br>window = sg.Window(<span class="hljs-string">&#x27;Window Title&#x27;</span>, layout)<br><br>event, values = window.read()<br><br>window.close()<br>text_input = values[<span class="hljs-number">0</span>]<br>sg.popup(<span class="hljs-string">&#x27;You entered&#x27;</span>, text_input) <span class="hljs-comment"># 弹出窗口</span><br><br><br><br><span class="hljs-keyword">import</span> PySimpleGUI <span class="hljs-keyword">as</span> sg<br>layout = [[sg.Text(<span class="hljs-string">&#x27;Your typed chars appear here:&#x27;</span>), sg.Text(size=(<span class="hljs-number">15</span>,<span class="hljs-number">1</span>), key=<span class="hljs-string">&#x27;-OUTPUT-&#x27;</span>)],<br>          [sg.Input(key=<span class="hljs-string">&#x27;-IN-&#x27;</span>)],<br>          [sg.Button(<span class="hljs-string">&#x27;Show&#x27;</span>), sg.Button(<span class="hljs-string">&#x27;Exit&#x27;</span>)]]<br><br>window = sg.Window(<span class="hljs-string">&#x27;Pattern 2B&#x27;</span>, layout)<br><br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:  <span class="hljs-comment"># Event Loop</span><br>    event, values = window.read()<br>    <span class="hljs-built_in">print</span>(event, values)<br>    <span class="hljs-keyword">if</span> event <span class="hljs-keyword">in</span>  (<span class="hljs-literal">None</span>, <span class="hljs-string">&#x27;Exit&#x27;</span>):<br>        <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">if</span> event == <span class="hljs-string">&#x27;Show&#x27;</span>:<br>        <span class="hljs-comment"># Update the &quot;output&quot; text element to be the value of &quot;input&quot; element</span><br>        window[<span class="hljs-string">&#x27;-OUTPUT-&#x27;</span>].update(values[<span class="hljs-string">&#x27;-IN-&#x27;</span>])<br><br>window.close()<br><br><span class="hljs-keyword">import</span> PySimpleGUI <span class="hljs-keyword">as</span> sg<br><br>layout = [[sg.Text(<span class="hljs-string">&#x27;A custom progress meter&#x27;</span>)],<br>          [sg.ProgressBar(<span class="hljs-number">1000</span>, orientation=<span class="hljs-string">&#x27;h&#x27;</span>, size=(<span class="hljs-number">20</span>, <span class="hljs-number">20</span>), key=<span class="hljs-string">&#x27;progressbar&#x27;</span>)],<br>          [sg.Cancel()]]<br><br>window = sg.Window(<span class="hljs-string">&#x27;Custom Progress Meter&#x27;</span>, layout)<br>progress_bar = window[<span class="hljs-string">&#x27;progressbar&#x27;</span>]<br><span class="hljs-comment"># loop that would normally do something useful</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1000</span>):<br>    <span class="hljs-comment"># check to see if the cancel button was clicked and exit loop if clicked</span><br>    event, values = window.read(timeout=<span class="hljs-number">10</span>)<br>    <span class="hljs-keyword">if</span> event == <span class="hljs-string">&#x27;Cancel&#x27;</span>  <span class="hljs-keyword">or</span> event <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">break</span><br>  <span class="hljs-comment"># update bar with loop value +1 so that bar eventually reaches the maximum</span><br>    progress_bar.UpdateBar(i + <span class="hljs-number">1</span>)<br><span class="hljs-comment"># done with loop... need to destroy the window as it&#x27;s still open</span><br>window.close()<br><br><span class="hljs-keyword">import</span> PySimpleGUI <span class="hljs-keyword">as</span> sg<br>sg.theme(<span class="hljs-string">&#x27;Default1&#x27;</span>)<br>text = sg.popup_get_file(<span class="hljs-string">&#x27;Please enter a file name&#x27;</span>,no_window=<span class="hljs-literal">False</span>)<br><span class="hljs-built_in">print</span>(text)<br><br><span class="hljs-keyword">import</span> PySimpleGUI <span class="hljs-keyword">as</span> sg<br>theme_name_list = sg.theme_list()<br>sg.theme_previewer()<br>sg.theme(<span class="hljs-string">&#x27;Default1&#x27;</span>)<br>layout = [[sg.Text(<span class="hljs-string">&#x27;Theme Browser&#x27;</span>)],<br>          [sg.Text(<span class="hljs-string">&#x27;Click a Theme color to see demo window&#x27;</span>)],<br>          [sg.Listbox(values=sg.theme_list(), size=(<span class="hljs-number">20</span>, <span class="hljs-number">12</span>), key=<span class="hljs-string">&#x27;-LIST-&#x27;</span>, enable_events=<span class="hljs-literal">True</span>)],<br>          [sg.Button(<span class="hljs-string">&#x27;Exit&#x27;</span>)]]<br>window = sg.Window(<span class="hljs-string">&#x27;Theme Browser&#x27;</span>, layout)<br><br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:  <span class="hljs-comment"># Event Loop</span><br>    event, values = window.read()<br>    <span class="hljs-keyword">if</span> event <span class="hljs-keyword">in</span> (<span class="hljs-literal">None</span>, <span class="hljs-string">&#x27;Exit&#x27;</span>):<br>        <span class="hljs-keyword">break</span><br>    sg.theme(values[<span class="hljs-string">&#x27;-LIST-&#x27;</span>][<span class="hljs-number">0</span>])<br>    sg.popup_get_text(<span class="hljs-string">&#x27;This is &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(values[<span class="hljs-string">&#x27;-LIST-&#x27;</span>][<span class="hljs-number">0</span>]))<br><br>window.close()<br><br><br><br><span class="hljs-keyword">import</span> PySimpleGUI <span class="hljs-keyword">as</span> psg<br>text = psg.popup_get_text(<span class="hljs-string">&#x27;Enter your name&#x27;</span>, title=<span class="hljs-string">&quot;Textbox&quot;</span>)<br><span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;You entered: &quot;</span>, text)<br>file=psg.popup_get_file(<span class="hljs-string">&#x27;Select a file&#x27;</span>,  title=<span class="hljs-string">&quot;File selector&quot;</span>)<br><span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;File selected&quot;</span>, file)<br>folder=psg.popup_get_folder(<span class="hljs-string">&#x27;Get folder&#x27;</span>, title=<span class="hljs-string">&quot;Folder selector&quot;</span>)<br><span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;Folder selected&quot;</span>,folder)<br>ch = psg.popup_yes_no(<span class="hljs-string">&quot;Do you want to Continue?&quot;</span>,  title=<span class="hljs-string">&quot;YesNo&quot;</span>)<br><span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;You clicked&quot;</span>, ch)<br>ch = psg.popup_ok_cancel(<span class="hljs-string">&quot;Press Ok to proceed&quot;</span>, <span class="hljs-string">&quot;Press cancel to stop&quot;</span>,  title=<span class="hljs-string">&quot;OkCancel&quot;</span>)<br><span class="hljs-keyword">if</span> ch==<span class="hljs-string">&quot;OK&quot;</span>:<br>   <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;You pressed OK&quot;</span>)<br><span class="hljs-keyword">if</span> ch==<span class="hljs-string">&quot;Cancel&quot;</span>:<br>   <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;You pressed Cancel&quot;</span>)<br>psg.popup_no_buttons(<span class="hljs-string">&#x27;You pressed&#x27;</span>, ch, non_blocking=<span class="hljs-literal">True</span>)<br>psg.popup_auto_close(<span class="hljs-string">&#x27;This window will Autoclose&#x27;</span>)<br><br><br><br><span class="hljs-keyword">import</span> PySimpleGUI <span class="hljs-keyword">as</span> psg<br>layout = [<br>   [psg.Text(<span class="hljs-string">&#x27;Name &#x27;</span>), psg.Input()],<br>   [psg.Text(<span class="hljs-string">&#x27;Address &#x27;</span>), psg.Input()],<br>   [psg.Text(<span class="hljs-string">&#x27;Email ID &#x27;</span>), psg.Input()],<br>   [psg.OK(), psg.Exit()]<br>]<br>window = psg.Window(<span class="hljs-string">&#x27;Form&#x27;</span>, layout)<br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>   event, values = window.read()<br>   <span class="hljs-keyword">if</span> event == psg.WIN_CLOSED <span class="hljs-keyword">or</span> event == <span class="hljs-string">&#x27;Exit&#x27;</span>:<br>      <span class="hljs-keyword">break</span><br>   <span class="hljs-built_in">print</span> (event, values)<br>window.close()<br><br><span class="hljs-keyword">import</span> PySimpleGUI <span class="hljs-keyword">as</span> psg<br>psg.set_options(font=(<span class="hljs-string">&#x27;Arial Bold&#x27;</span>, <span class="hljs-number">16</span>))<br>layout = [<br>   [psg.Text(<span class="hljs-string">&#x27;Name &#x27;</span>, size=(<span class="hljs-number">15</span>, <span class="hljs-number">1</span>)),<br>   psg.Input(key=<span class="hljs-string">&#x27;-NM-&#x27;</span>, expand_x=<span class="hljs-literal">True</span>)],<br>   [psg.Text(<span class="hljs-string">&#x27;Address &#x27;</span>, size=(<span class="hljs-number">15</span>, <span class="hljs-number">1</span>)),<br>   psg.Input(key=<span class="hljs-string">&#x27;-AD-&#x27;</span>, expand_x=<span class="hljs-literal">True</span>)],<br>   [psg.Text(<span class="hljs-string">&#x27;Email ID &#x27;</span>, size=(<span class="hljs-number">15</span>, <span class="hljs-number">1</span>)),<br>   psg.Input(key=<span class="hljs-string">&#x27;-ID-&#x27;</span>, expand_x=<span class="hljs-literal">True</span>)],<br>   [psg.Text(<span class="hljs-string">&#x27;You Entered &#x27;</span>), psg.Text(key=<span class="hljs-string">&#x27;-OUT-&#x27;</span>)],<br>   [psg.OK(), psg.Exit()],<br>]<br>window = psg.Window(<span class="hljs-string">&#x27;Form&#x27;</span>, layout, size=(<span class="hljs-number">715</span>, <span class="hljs-number">200</span>))<br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>   event, values = window.read()<br>   <span class="hljs-built_in">print</span>(event, values)<br>   out = values[<span class="hljs-string">&#x27;-NM-&#x27;</span>] + <span class="hljs-string">&#x27; &#x27;</span> + values[<span class="hljs-string">&#x27;-AD-&#x27;</span>] + <span class="hljs-string">&#x27; &#x27;</span> + values[<span class="hljs-string">&#x27;-ID-&#x27;</span>]<br>   window[<span class="hljs-string">&#x27;-OUT-&#x27;</span>].update(out)<br>   <span class="hljs-keyword">if</span> event == psg.WIN_CLOSED <span class="hljs-keyword">or</span> event == <span class="hljs-string">&#x27;Exit&#x27;</span>:<br>      <span class="hljs-keyword">break</span><br>window.close()<br><br></code></pre></td></tr></table></figure><h2 id="FTDI-module"><a href="#FTDI-module" class="headerlink" title="FTDI module"></a>FTDI module</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> ft4222<br><span class="hljs-keyword">import</span> ft4222.I2CMaster<br><br><br><span class="hljs-comment"># 需要在命令行使用以下命令，安装库</span><br><span class="hljs-comment"># pip install ft4222</span><br><br><span class="hljs-comment"># list devices</span><br>nbDev = ft4222.createDeviceInfoList()<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(nbDev):<br>    <span class="hljs-built_in">print</span>(ft4222.getDeviceInfoDetail(i, <span class="hljs-literal">False</span>))<br></code></pre></td></tr></table></figure><h2 id="生成音频"><a href="#生成音频" class="headerlink" title="生成音频"></a>生成音频</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment"># wav 250</span><br><span class="hljs-keyword">import</span> wave<br><span class="hljs-keyword">import</span> math<br><span class="hljs-keyword">import</span> array<br><br><span class="hljs-comment"># 音频参数</span><br>sample_rate = <span class="hljs-number">44100</span>  <span class="hljs-comment"># 采样频率</span><br>duration = <span class="hljs-number">60</span>*<span class="hljs-number">1</span>  <span class="hljs-comment"># 音频时长（秒）</span><br><br><span class="hljs-comment"># 创建一个新的WAV文件</span><br>output_file = wave.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;output.wav&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>)<br>output_file.setnchannels(<span class="hljs-number">1</span>)  <span class="hljs-comment"># 单声道</span><br>output_file.setsampwidth(<span class="hljs-number">2</span>)  <span class="hljs-comment"># 2字节，16位</span><br>output_file.setframerate(sample_rate)<br><br><span class="hljs-comment"># 生成250Hz的音频数据</span><br>samples = array.array(<span class="hljs-string">&#x27;h&#x27;</span>, [<span class="hljs-number">0</span>] * (sample_rate * duration))<br>amplitude = <span class="hljs-number">2</span> ** <span class="hljs-number">15</span> - <span class="hljs-number">1</span>  <span class="hljs-comment"># 振幅</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(samples)):<br>    t = <span class="hljs-built_in">float</span>(i) / sample_rate  <span class="hljs-comment"># 当前时间（秒）</span><br>    samples[i] = <span class="hljs-built_in">int</span>(amplitude * math.sin(<span class="hljs-number">2</span> * math.pi * <span class="hljs-number">250</span> * t))<br><br><span class="hljs-comment"># 将音频数据写入WAV文件</span><br>output_file.writeframes(samples)<br><br><span class="hljs-comment"># 关闭WAV文件</span><br>output_file.close()<br></code></pre></td></tr></table></figure><h1 id="打包的时候使用"><a href="#打包的时候使用" class="headerlink" title="打包的时候使用:"></a>打包的时候使用:</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pyinstaller --icon=edit_icon.ico --noconsole  --onefile demo.py<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>硬件模块</tag>
      
      <tag>Python</tag>
      
      <tag>编程语言</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python语言基础教程</title>
    <link href="/2024/08/11/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    <url>/2024/08/11/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="pyenv"><a href="#pyenv" class="headerlink" title="pyenv"></a>pyenv</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>pyenv version<br>pyenv install<br>pyenv global<br>pyenv versions<br><span class="hljs-comment"># 切换分支</span><br>pyenv global 3.7.0<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>VScode使用教程</title>
    <link href="/2024/08/11/VScode%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
    <url>/2024/08/11/VScode%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h1 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h1><ol><li>控制面板卸载 vscode</li><li>Win+r 输入%appdata%,删除 code 文件夹</li><li>用户文件夹删除.code 文件夹</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">rm</span> C:\Users\G3\.vscode-insiders<br><span class="hljs-built_in">rm</span> C:\Users\G3\AppData\Roaming\Code - Insiders<br></code></pre></td></tr></table></figure><h1 id="插件列表"><a href="#插件列表" class="headerlink" title="插件列表"></a>插件列表</h1><ul><li>Azure Repos</li><li>github repositor</li><li>learn-markdown</li><li>Markdown All in One</li><li>Markdown PDF</li><li>Markdown Preview Enhanced</li><li>Office Viewer(Markdown Editor)</li><li>prettier</li><li>remote</li><li>Sort lines</li><li>ToDo Tree</li><li>vscode-pandoc</li><li>vscode-pdf</li><li>Write Timestamp</li><li>WSL</li><li>XML</li></ul><h1 id="特殊操作"><a href="#特殊操作" class="headerlink" title="特殊操作"></a>特殊操作</h1><ul><li>关闭缓存，避免占用磁盘空间太大,json 文件中添加<code>&quot;C_Cpp.intelliSenseCacheSize&quot;: 0,</code></li><li>打开按键输入显示 <code>screencast mode</code></li></ul><h1 id="操作说明"><a href="#操作说明" class="headerlink" title="操作说明"></a>操作说明</h1><p><strong>删除重复行</strong> 打开命令台输入 lines，找到&#x3D;delete duplicate lines&#x3D;<br><strong>删除含有某些关键字的行</strong> <code>.*(word1|word2|word3).*</code><br><strong>自动折行</strong> 设置搜索 word wrap 或者快捷键 Alt+Z</p>]]></content>
    
    
    <categories>
      
      <category>软件</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VScode</tag>
      
      <tag>软件教程</tag>
      
      <tag>软件配置</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>健康</title>
    <link href="/2024/08/11/%E5%81%A5%E5%BA%B7/"/>
    <url>/2024/08/11/%E5%81%A5%E5%BA%B7/</url>
    
    <content type="html"><![CDATA[<h1 id="健身锻炼"><a href="#健身锻炼" class="headerlink" title="健身锻炼"></a>健身锻炼</h1><h2 id="游泳"><a href="#游泳" class="headerlink" title="游泳"></a>游泳</h2><h1 id="常用药物"><a href="#常用药物" class="headerlink" title="常用药物"></a>常用药物</h1><p><img src="%E8%8D%AF%E5%93%81.png" alt="常用药物"><br>胃穿孔就是胃酸分泌过多，可以喝点含有糖分的饮料等，降低胃病发作概率。</p>]]></content>
    
    
    <categories>
      
      <category>生活</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生活</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows零散配置汇总</title>
    <link href="/2024/06/13/Windows%E9%9B%B6%E6%95%A3%E9%85%8D%E7%BD%AE%E6%B1%87%E6%80%BB/"/>
    <url>/2024/06/13/Windows%E9%9B%B6%E6%95%A3%E9%85%8D%E7%BD%AE%E6%B1%87%E6%80%BB/</url>
    
    <content type="html"><![CDATA[<h1 id="Windows-系统"><a href="#Windows-系统" class="headerlink" title="Windows 系统"></a>Windows 系统</h1><ul><li><strong>如何在安装 windows11 时跳过联网？</strong> 安装界面:Shift+F10 进入 cmd，cmd 窗口输入 oobe\bypassnro 回车即可</li><li><strong>微软账户连接慢，怎么解决？</strong> 设置-网络和 Internet-高级网络设置-更多网络适配器选项 WLAN-属性-IPv4 DNS，服务器选择 4.2.2.1 和 4.2.2.2</li><li><strong>windows 下进入恢复模式</strong> 在已经打开了 Windows 系统的情况下，可以直接输入<code>shutdown /r /o /t 0</code></li><li><strong>关闭 edge 广告</strong> 在 Edge 地址栏输入 <code>edge://flags#</code>,搜索 <code>edge-show-feature-recommendations</code>,设置为 <code>Disabled</code></li><li><strong>删除 edge 浏览器账户</strong> 改用本地（停止在线账户），然后在设置-账户-电子邮件账户里面删除账户</li><li><strong>远程桌面连接错误</strong> Win+R:secpol.msc 本地策略-&gt;安全选项 帐户: 空白密码 禁用</li><li><strong>开启开机自动支持远程，不需要先登录</strong> 打开计算机管理-服务，<code>Remote Desktop Services</code>设置为自动</li><li><strong>开始菜单图标不刷新</strong> 打开任务管理器搜索”开始”，然后关闭</li><li><strong>Hiberfil.sys 文件占用大</strong> 这是系统休眠文件，如果在终端中输入<code>powercfg -h off</code>，会自动删除该文件，但也会关闭休眠模式</li><li><strong>ssh-keygen 使用</strong> <code>ssh-keygen -t rsa -C &quot;zhang.san@xxx.com&quot;</code></li><li><strong>如何免登录安装 store 软件？</strong> 在官方网站搜索软件，找到软件链接粘贴到解析网站中下载,<a href="https://apps.microsoft.com/store/apps?hl=en-us&gl=us">官方网站</a>, <a href="https://store.rg-adguard.net/">解析网站</a></li><li>在 powershell 中快速文件资源管理器在当前路径:<code>ii .</code>(是<code>Invoke-Item</code>的缩写)</li></ul><h2 id="Windows-系统变量"><a href="#Windows-系统变量" class="headerlink" title="Windows 系统变量"></a>Windows 系统变量</h2><table><thead><tr><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>%AppData%</td><td>指向当前用户的用户文件夹</td></tr><tr><td>%CommonProgramFiles%</td><td>指向共享的程序文件夹</td></tr><tr><td>%LocalAppData%</td><td>指向当前用户的本地应用程序数据文件夹</td></tr><tr><td>%ProgramData%</td><td>指向所有用户的共享程序数据文件夹</td></tr><tr><td>%ProgramFiles%</td><td>指向 C:\Program Files</td></tr><tr><td>%Public%</td><td>指向公共用户文件夹，可用于存放共享文件</td></tr><tr><td>%SystemRoot%</td><td>指向 Windows 操作系统的安装目录，通常为 C:\Windows</td></tr><tr><td>%Temp%</td><td>指向当前用户的临时文件夹，用于存放临时文件</td></tr><tr><td>%username%</td><td>用户名</td></tr><tr><td>%UserProfile%</td><td><code>C:\Users\用户名</code></td></tr></tbody></table><h2 id="powershell"><a href="#powershell" class="headerlink" title="powershell"></a>powershell</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 打印path，使用&#x27;;&#x27;分割</span><br><span class="hljs-variable">$env:path</span> <span class="hljs-operator">-split</span><span class="hljs-string">&quot;;&quot;</span><br><br><span class="hljs-comment"># 添加环境变量</span><br><span class="hljs-variable">$addPath</span>=‘D:/Program Files/SEGGER/SEGGER Embedded Studio <span class="hljs-keyword">for</span> RISC<span class="hljs-literal">-V</span> <span class="hljs-number">6.22</span>a/bin;D:/Program Files/SEGGER/SEGGER Embedded Studio <span class="hljs-keyword">for</span> RISC<span class="hljs-literal">-V</span> <span class="hljs-number">6.22</span>a/gcc/riscv32<span class="hljs-literal">-none-elf</span>/bin;D:\Program Files\ArmGNUToolchain\arm<span class="hljs-literal">-gnu-toolchain-13</span>.<span class="hljs-number">2</span>.Rel1<span class="hljs-literal">-mingw-w64-i686-arm-none-eabi</span>\bin;D:\Program Files\mingw64\bin;D:\Program Files\w64devkit\bin;’;<br><span class="hljs-variable">$target</span>=‘User’;<br><span class="hljs-variable">$path</span> = [<span class="hljs-type">Environment</span>]::GetEnvironmentVariable(‘Path’, <span class="hljs-variable">$target</span>);<br><span class="hljs-variable">$newPath</span> = <span class="hljs-variable">$path</span> + ‘;’ + <span class="hljs-variable">$addPath</span>;<br>[<span class="hljs-type">Environment</span>]::SetEnvironmentVariable(“Path”, <span class="hljs-variable">$newPath</span>, <span class="hljs-variable">$target</span>)<br></code></pre></td></tr></table></figure><h2 id="winget"><a href="#winget" class="headerlink" title="winget"></a>winget</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">--accept-package-agreements 接受所有安装过程中的协议</span><br>winget install Google.Chrome --accept-package-agreements<br></code></pre></td></tr></table></figure><h2 id="WSL-安装与卸载"><a href="#WSL-安装与卸载" class="headerlink" title="WSL 安装与卸载"></a>WSL 安装与卸载</h2><p><a href="https://learn.microsoft.com/zh-cn/windows/wsl/install">安装链接</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 系统备份迁移步骤</span><br>wsl --update <span class="hljs-comment"># 升级</span><br>wsl --shutdown <span class="hljs-comment"># 关机</span><br>wsl -l -v <span class="hljs-comment"># 查看 #导出系统</span><br>wsl --<span class="hljs-built_in">export</span> Debian <span class="hljs-string">&quot;D:\Linux\wsl-debian.tar&quot;</span><br><span class="hljs-comment"># 卸载虚拟机</span><br>wsl --unregister Debian<br><span class="hljs-comment"># 导入虚拟机</span><br>wsl --import Debian <span class="hljs-string">&quot;D:\Linux&quot;</span> <span class="hljs-string">&quot;D:\wsl-debian.tar&quot;</span> --version 2<br><span class="hljs-comment"># 打开 &quot;C:\Windows\System32&quot; 目录，打开 powershell，切换到管理员</span><br>Start-Process powershell -Verb runAs<br><span class="hljs-comment"># 管理员权限运行</span><br>Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux<br><span class="hljs-comment"># 设置默认用户</span><br><span class="hljs-comment"># 先找到debian.exe的安装位置,可以用everthing找</span><br><span class="hljs-comment"># debian config --default-user &#123;user-name&#125;</span><br>debian.exe config --default-user debian<br><span class="hljs-comment"># 重启电脑然后执行升级命令</span><br>wsl --update<br><span class="hljs-comment"># 图形化</span><br>https://learn.microsoft.com/zh-cn/windows/wsl/tutorials/gui-apps<br><br></code></pre></td></tr></table></figure><h1 id="常见问题与答案"><a href="#常见问题与答案" class="headerlink" title="常见问题与答案"></a>常见问题与答案</h1><h2 id="ssh-相关"><a href="#ssh-相关" class="headerlink" title="ssh 相关"></a>ssh 相关</h2><p>在 windows terminal 中使用 ssh 连接远程主机的时候如果出现提示<code>WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!</code>，那么需要使用<code>ssh-keygen -R XX.XX.XX.XX</code>移除之前的主机信息，然后重新连接。</p><h2 id="Powershell"><a href="#Powershell" class="headerlink" title="Powershell"></a>Powershell</h2><p>无法加载文件 xxx.ps1，因为在此系统上禁止运行脚本。解决办法: 输入<code>get-executionpolicy</code>查看策略,更改策略 <code>set-executionpolicy remotesigned</code>.</p><h2 id="远程桌面相关"><a href="#远程桌面相关" class="headerlink" title="远程桌面相关"></a>远程桌面相关</h2><ol><li>没设置密码导致连接失败：按 win+R 输入<code>secpol.msc</code>,然后依次点击本次策略-安全选项，选择<code>账户：使用空密码的本地账户只允许进行控制台登录</code>,将其禁用即可。</li><li>远程桌面必须先登录才能远程：打开计算机管理，服务和应用程序，找到<code>Remote Desktop Service</code>,设置为自启动即可。</li></ol><h2 id="如何关闭休眠模式？"><a href="#如何关闭休眠模式？" class="headerlink" title="如何关闭休眠模式？"></a>如何关闭休眠模式？</h2><p>关闭休眠模式：管理员权限运行 cmd，输入<code>powercfg -h off</code>，关闭休眠。</p>]]></content>
    
    
    <categories>
      
      <category>Windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Windows设置</tag>
      
      <tag>电脑优化</tag>
      
      <tag>电脑常见问题</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux基础知识</title>
    <link href="/2024/06/13/Linux%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <url>/2024/06/13/Linux%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<h1 id="Linux-系统介绍"><a href="#Linux-系统介绍" class="headerlink" title="Linux 系统介绍"></a>Linux 系统介绍</h1><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 容易缺失的软件库</span><br>sudo apt install lib32z1 lib32ncurses5 lib32bz2-1.0<br><br><span class="hljs-comment"># tftp搭建</span><br><br><span class="hljs-comment"># nfs环境搭建</span><br><br></code></pre></td></tr></table></figure><h1 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h1><table><thead><tr><th>网站</th><th>网址</th></tr></thead><tbody><tr><td>内核官网</td><td><a href="https://kernel.org/">https://kernel.org/</a></td></tr><tr><td>uboot 官网</td><td><a href="https://www.denx.de/wiki/U-Boot">https://www.denx.de/wiki/U-Boot</a></td></tr><tr><td>uboot 源码</td><td><a href="https://github.com/u-boot/u-boot/tree/master">https://github.com/u-boot/u-boot/tree/master</a></td></tr><tr><td>Uboot 下载</td><td><a href="https://ftp.denx.de/pub/u-boot/">https://ftp.denx.de/pub/u-boot/</a></td></tr><tr><td>嵌入式 Linux WiKi</td><td><a href="https://elinux.org/Main_Page">https://elinux.org/Main_Page</a></td></tr><tr><td>Buildroot</td><td><a href="https://buildroot.org/">https://buildroot.org/</a></td></tr><tr><td>交叉打包工具</td><td><a href="https://crosstool-ng.github.io/">https://crosstool-ng.github.io/</a></td></tr></tbody></table><h1 id="软件列表"><a href="#软件列表" class="headerlink" title="软件列表"></a>软件列表</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 必装软件</span><br>sudo apt install  build-essential vim git wget tldr unzip zip aptitude<br><span class="hljs-comment"># document</span><br>sudo apt install texlive-full emacs pandoc<br><span class="hljs-comment"># font</span><br>sudo apt install fonts-wqy-microhei fonts-wqy-zenhei<br><span class="hljs-comment"># python3 and pip</span><br>sudo apt install python-is-python3 python3-pip<br><span class="hljs-comment"># juypter</span><br>sudo apt install python3-ipykernel<br><span class="hljs-comment"># 小工具</span><br>sudo apt install ascii<br></code></pre></td></tr></table></figure><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 开机启动命令行界面</span><br>sudo systemctl set-default multi-user.target<br><span class="hljs-comment"># 开机启动图形化界面</span><br>sudo systemctl set-default graphical.target<br><span class="hljs-comment"># 查看所有中文字体</span><br>fc-list :lang=zh<br><br><span class="hljs-comment"># 当脚本中需要root密码 &quot;passwd&quot;</span><br><span class="hljs-comment"># echo &quot;passwd&quot; | sudo -S &lt;cmd_xxxx&gt;</span><br><br><span class="hljs-comment"># 桌面安装</span><br>sudo apt-get install gnome-shell ubuntu-gnome-desktop unity-tweak-tool gnome-tweak-tool<br><span class="hljs-comment"># 编译环境配置</span><br>sudo apt install cmake build-essential python-is-python3<br><span class="hljs-comment"># 压缩解压</span><br>tar -cvf demo.tar<br>tar -zcvf demo.tar.gz<br>tar -jcvf demo.tar.bz2<br>tar -xvf demo.tar<br>tar -jxvf demo.tar.bz2<br>tar -zxvf demo.tar.gz<br></code></pre></td></tr></table></figure><h2 id="压缩解压文件命令"><a href="#压缩解压文件命令" class="headerlink" title="压缩解压文件命令"></a>压缩解压文件命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 1. 使用 tar 压缩文件</span><br><span class="hljs-comment"># 该命令表示压缩当前文件夹下的文件夹 test，压缩后缀名为 test.tar.gz</span><br>tar -zcvf test.tar.gz ./test/<br><span class="hljs-comment"># 如果不需要压缩成 gz，只需要后缀为tar格式的，那么输入如下命令：</span><br>tar -cvf test.tar ./test/<br><br><span class="hljs-comment"># 1. 使用 tar 解压文件</span><br><span class="hljs-comment"># 该命令表示把后缀为.tar.gz 的文件解压到当前文件夹下。</span><br>tar -xzvf test.tar.gz<br><span class="hljs-comment"># 如果压缩文件的后缀是.tar，没有gz，则使用命令:</span><br><span class="hljs-comment"># tar -xvf test.tar</span><br></code></pre></td></tr></table></figure><h1 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h1><h2 id="新安装的-debian-系统，如何添加用户并获取-root-权限"><a href="#新安装的-debian-系统，如何添加用户并获取-root-权限" class="headerlink" title="新安装的 debian 系统，如何添加用户并获取 root 权限"></a>新安装的 debian 系统，如何添加用户并获取 root 权限</h2><p>首先切换到 root 用户，然后执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 创建用户</span><br>sudo useradd -s /bin/bash -m &#123;username&#125;<br><span class="hljs-comment"># 设置密码</span><br>sudo passwd &#123;username&#125;<br><span class="hljs-comment"># 添加到root权限组</span><br>sudo usermod -aG sudo &#123;username&#125;<br></code></pre></td></tr></table></figure><h2 id="修改时区？"><a href="#修改时区？" class="headerlink" title="修改时区？"></a>修改时区？</h2><p><code>tzselect</code> 设置, <code>ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</code></p><h2 id="Linux-免密码登录"><a href="#Linux-免密码登录" class="headerlink" title="Linux 免密码登录"></a>Linux 免密码登录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> .ssh<br><span class="hljs-built_in">mv</span> id_rsa.pub .ssh<br><span class="hljs-built_in">cd</span> .ssh<br><span class="hljs-built_in">cat</span> id_rsa.pub &gt;&gt; authorized_keys<br>sudo <span class="hljs-built_in">chmod</span> 600 authorized_keys<br>service sshd restart<br></code></pre></td></tr></table></figure><h2 id="vnc-服务配置"><a href="#vnc-服务配置" class="headerlink" title="vnc 服务配置"></a>vnc 服务配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/sh</span><br><span class="hljs-built_in">unset</span> SESSION_MANAGER<br><span class="hljs-built_in">unset</span> DBUS_SESSION_BUS_ADDRESS<br>startxfce4 &amp;<br></code></pre></td></tr></table></figure><p>在 <code>/etc/systemd/system/vncserver@.service</code> 文件中修改。</p><h2 id="更改-Debian-12-bookorm-镜像源"><a href="#更改-Debian-12-bookorm-镜像源" class="headerlink" title="更改 Debian 12 bookorm 镜像源"></a>更改 Debian 12 bookorm 镜像源</h2><p>可能 https 存在认证问题 先将源中的 https 改为 http，安装如下软件后再改回来，<code>sudo apt install apt-transport-https ca-certificates</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware<br>deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware<br>deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware<br>deb https://mirrors.tuna.tsinghua.edu.cn/debian-security bookworm-security main contrib non-free non-free-firmware<br><span class="hljs-comment"># deb https://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware</span><br><br><span class="hljs-comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware</span><br><span class="hljs-comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware</span><br><span class="hljs-comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware</span><br><span class="hljs-comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security bookworm-security main contrib non-free non-free-firmware</span><br><span class="hljs-comment"># deb-src https://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware</span><br><br></code></pre></td></tr></table></figure><h1 id="资源-1"><a href="#资源-1" class="headerlink" title="资源"></a>资源</h1><table><thead><tr><th>网站</th><th>网址</th></tr></thead><tbody><tr><td>内核官网</td><td><a href="https://kernel.org/">https://kernel.org/</a></td></tr><tr><td>uboot 官网</td><td><a href="https://www.denx.de/wiki/U-Boot">https://www.denx.de/wiki/U-Boot</a></td></tr><tr><td>Uboot ftp 下载地址</td><td><a href="https://ftp.denx.de/pub/u-boot/">https://ftp.denx.de/pub/u-boot/</a></td></tr><tr><td>嵌入式 Linux WiKi</td><td><a href="https://elinux.org/Main_Page">https://elinux.org/Main_Page</a></td></tr><tr><td>Buildroot</td><td><a href="https://buildroot.org/">https://buildroot.org/</a></td></tr><tr><td>交叉打包工具</td><td><a href="https://crosstool-ng.github.io/">https://crosstool-ng.github.io/</a></td></tr></tbody></table><h1 id="Debian-12-bookorm-镜像源"><a href="#Debian-12-bookorm-镜像源" class="headerlink" title="Debian 12 bookorm 镜像源"></a>Debian 12 bookorm 镜像源</h1><p>可能 https 存在认证问题 先将源中的 https 改为 http，安装如下软件后再改回来<br><code>sudo apt install apt-transport-https ca-certificates</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware<br>deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware<br>deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware<br>deb https://mirrors.tuna.tsinghua.edu.cn/debian-security bookworm-security main contrib non-free non-free-firmware<br><span class="hljs-comment"># deb https://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware</span><br><br><span class="hljs-comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware</span><br><span class="hljs-comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware</span><br><span class="hljs-comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware</span><br><span class="hljs-comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security bookworm-security main contrib non-free non-free-firmware</span><br><span class="hljs-comment"># deb-src https://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware</span><br><br></code></pre></td></tr></table></figure><h1 id="软件列表-1"><a href="#软件列表-1" class="headerlink" title="软件列表"></a>软件列表</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 必装软件</span><br><br>sudo apt install  build-essential vim git wget tldr unzip zip aptitude<br><span class="hljs-comment"># document</span><br>sudo apt install texlive-full emacs pandoc<br><span class="hljs-comment"># font</span><br>sudo apt install fonts-wqy-microhei fonts-wqy-zenhei<br><span class="hljs-comment"># python3 and pip</span><br>sudo apt install python-is-python3 python3-pip<br><span class="hljs-comment"># juypter</span><br>sudo apt install python3-ipykernel<br><span class="hljs-comment"># 小工具</span><br>sudo apt install ascii<br></code></pre></td></tr></table></figure><h1 id="常用命令-1"><a href="#常用命令-1" class="headerlink" title="常用命令"></a>常用命令</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 开机启动命令行界面</span><br>sudo systemctl set-default multi-user.target<br><span class="hljs-comment"># 开机启动图形化界面</span><br>sudo systemctl set-default graphical.target<br><span class="hljs-comment"># 查看所有中文字体</span><br>fc-list :lang=zh<br><br><span class="hljs-comment"># 当脚本中需要root密码 &quot; &quot;</span><br><span class="hljs-comment"># echo &quot; &quot; | sudo -S &lt;cmd_xxxx&gt;</span><br><br><span class="hljs-comment"># 桌面安装</span><br>sudo apt-get install gnome-shell ubuntu-gnome-desktop unity-tweak-tool gnome-tweak-tool<br><span class="hljs-comment"># 编译环境配置</span><br>sudo apt install cmake build-essential python-is-python3<br><span class="hljs-comment"># 压缩解压</span><br>tar -cvf demo.tar<br>tar -zcvf demo.tar.gz<br>tar -jcvf demo.tar.bz2<br>tar -xvf demo.tar<br>tar -jxvf demo.tar.bz2<br>tar -zxvf demo.tar.gz<br></code></pre></td></tr></table></figure><h1 id="FAQ-1"><a href="#FAQ-1" class="headerlink" title="FAQ"></a>FAQ</h1><table><thead><tr><th>Q</th><th>A</th></tr></thead><tbody><tr><td>修改时区？</td><td><code>tzselect</code>设置,<code>ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</code></td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr></tbody></table><p>Q: Linux 免登录?<br>A:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> .ssh<br><span class="hljs-built_in">mv</span> id_rsa.pub .ssh<br><span class="hljs-built_in">cd</span> .ssh<br><span class="hljs-built_in">cat</span> id_rsa.pub &gt;&gt; authorized_keys<br>sudo <span class="hljs-built_in">chmod</span> 600 authorized_keys<br>service sshd restart<br></code></pre></td></tr></table></figure><h1 id="Linux-Config"><a href="#Linux-Config" class="headerlink" title="Linux Config"></a>Linux Config</h1><h2 id="vnc-配置"><a href="#vnc-配置" class="headerlink" title="vnc 配置"></a>vnc 配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/sh</span><br><span class="hljs-built_in">unset</span> SESSION_MANAGER<br><span class="hljs-built_in">unset</span> DBUS_SESSION_BUS_ADDRESS<br><br>startxfce4 &amp;<br></code></pre></td></tr></table></figure><p>在<code>/etc/systemd/system/vncserver@.service</code>文件中，注意修改</p><h1 id="Linux-学习记录"><a href="#Linux-学习记录" class="headerlink" title="Linux 学习记录"></a>Linux 学习记录</h1><h2 id="常用命令说明"><a href="#常用命令说明" class="headerlink" title="常用命令说明"></a>常用命令说明</h2><ol><li>使用 tar 压缩文件</li></ol><p>tar -zcvf test.tar.gz .&#x2F;test&#x2F;</p><p>该命令表示压缩当前文件夹下的文件夹 test，压缩后缀名为 test.tar.gz</p><p>如果不需要压缩成 gz，只需要后缀为 tar 格式的，那么输入如下命令：</p><p>tar -cvf test.tar .&#x2F;test&#x2F;</p><ol start="2"><li>使用 tar 解压文件</li></ol><p>tar -xzvf test.tar.gz</p><p>该命令表示把后缀为.tar.gz 的文件解压到当前文件夹下。</p><p>如果压缩文件的后缀是.tar，没有 gz，则使用命令:</p><p>tar -xvf test.tar</p><h1 id="嵌入式-Linux-开发"><a href="#嵌入式-Linux-开发" class="headerlink" title="嵌入式 Linux 开发"></a>嵌入式 Linux 开发</h1><h2 id="网络资源"><a href="#网络资源" class="headerlink" title="网络资源"></a>网络资源</h2><ul><li><a href="https://docs.u-boot.org/en/latest/">uboot doc</a></li><li><a href="https://github.com/u-boot/u-boot/tree/master">uboot source code</a></li></ul><h2 id="环境搭建-1"><a href="#环境搭建-1" class="headerlink" title="环境搭建"></a>环境搭建</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 编译器等</span><br><br><span class="hljs-comment"># 容易缺失的软件</span><br>sudo apt install lib32z1 lib32ncurses5 lib32bz2-1.0<br><br><span class="hljs-comment"># tftp搭建</span><br><br><span class="hljs-comment"># nfs环境搭建</span><br><br><br><br></code></pre></td></tr></table></figure><h1 id="uboot"><a href="#uboot" class="headerlink" title="uboot"></a>uboot</h1><h1 id="Linux-kernel"><a href="#Linux-kernel" class="headerlink" title="Linux kernel"></a>Linux kernel</h1><h1 id="rootfs"><a href="#rootfs" class="headerlink" title="rootfs"></a>rootfs</h1>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>基础知识</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/06/13/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%B8%8E%E8%84%9A%E6%9C%AC/md2pdf/markdown2pdf/"/>
    <url>/2024/06/13/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%B8%8E%E8%84%9A%E6%9C%AC/md2pdf/markdown2pdf/</url>
    
    <content type="html"><![CDATA[<h1 id="markdown-转-pdf-说明"><a href="#markdown-转-pdf-说明" class="headerlink" title="markdown 转 pdf 说明"></a>markdown 转 pdf 说明</h1><p>首先安装两个软件，pandoc 和 texlive。安装完成后，使用 <code>md2pdf.bat</code> 脚本搭配 <code>eisvogel.latex</code> 模板进行从<code>.md</code>到<code>.pdf</code>的格式转化。</p><p>点击下方链接进行下载：</p><p><a href="https://github.com/jgm/pandoc/releases/download/3.1.12.3/pandoc-3.1.12.3-windows-x86_64.msi">pandoc</a></p><p><a href="https://iso.mirrors.ustc.edu.cn/CTAN/systems/texlive/Images/texlive2024-20240312.iso">texlive-20240312</a></p><p>安装完成后，通过使用 <code>md2pdf.bat</code> 脚本进行格式转化，为了方便将任意的目录下的<code>.md</code>文件转为<code>.pdf</code>，可以将 <code>md2pdf.bat</code> 文件所在的路径添加到环境变量 PATH 中。</p><p>如下图所示,该路径包含<code>md2pdf.bat</code>和模板文件<code>eisvogel.latex</code>：</p><p><img src="img/md2pdf_script.png" alt="path add"></p><p>在任意一个包含 markdown 的路径下，打开 cmd 或 powershell，输入如下指令，然后回车即可。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 转化所有的md为pdf</span><br>make<br><span class="hljs-comment"># 转化xxx.md为xxx.pdf</span><br>make xxx.pdf<br><span class="hljs-comment"># 清除pdf</span><br>make clean<br></code></pre></td></tr></table></figure><p>输入完命令后，会生成同名的 pdf 文件。</p><h1 id="Linux-下编译的补充说明"><a href="#Linux-下编译的补充说明" class="headerlink" title="Linux 下编译的补充说明"></a>Linux 下编译的补充说明</h1><p>如果是在 Linux 下编译,则需要安装 pandoc 软件。</p><p>使用命令直接安装,如果 Linux 版本比较老,执行 makefile 的时候,可能会出现 pandoc 相关命令错误。<br>使用软件安装包直接安装，则输入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> xxx <span class="hljs-comment"># 切换到安装包目录</span><br>sudo dpkg -i pandoc-3.1.12.3-1-amd64.deb<br></code></pre></td></tr></table></figure><p>软件安装包链接：<a href="https://github.com/jgm/pandoc/releases/download/3.1.12.3/pandoc-3.1.12.3-1-amd64.deb">pandoc</a></p><p>同时还需要安装中文字体的环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install fonts-wqy-zenhei<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>资源汇总</title>
    <link href="/2024/06/11/%E8%B5%84%E6%BA%90%E6%B1%87%E6%80%BB/"/>
    <url>/2024/06/11/%E8%B5%84%E6%BA%90%E6%B1%87%E6%80%BB/</url>
    
    <content type="html"><![CDATA[<h1 id="电脑软件"><a href="#电脑软件" class="headerlink" title="电脑软件"></a>电脑软件</h1><h2 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h2><ul><li><a href="https://gitextensions.github.io/">Git Extension</a></li><li><a href="https://www.keil.com/fid/pw54XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX/files/eval/mdk540.exe">keil_V5.40</a></li><li><a href="http://www.mounriver.com/download">mounriver IDE</a></li></ul><h2 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h2><ul><li><a href="https://calibre-ebook.com/zh_CN/download">calibre</a></li><li><a href="https://sourceforge.net/projects/mpv-player-windows/files/">MPV</a></li><li><a href="https://www.autoitscript.com/autoit3/files/beta/autoit/">autoit</a></li><li><a href="https://winscp.net/eng/download.php">winscp</a></li></ul><h1 id="冷门软件"><a href="#冷门软件" class="headerlink" title="冷门软件"></a>冷门软件</h1><ul><li><a href="https://github.com/emoacht/Monitorian">Monitorian</a> ：调节扩展屏亮度，不需要使用扩展屏的 OSD 菜单。</li><li>Twinkle Tray: Brightness Slider：调节扩展屏亮度，不需要使用扩展屏的 OSD 菜单。</li><li>快速编写简易的 exe 软件：<a href="https://www.autoitx.com/Doc/">https://www.autoitx.com/Doc/</a></li></ul><h1 id="字体下载"><a href="#字体下载" class="headerlink" title="字体下载"></a>字体下载</h1><ul><li><a href="https://github.com/lxgw/LxgwWenKai">lxgw</a> 中文字体</li><li><a href="https://github.com/ryanoasis/nerd-fonts">nerd-fonts</a> 图标字体</li><li><a href="https://github.com/microsoft/cascadia-code">cascadia-code</a> 微软字体，系统自带</li><li><a href="https://www.jetbrains.com/lp/mono/">jetbrains font</a></li><li><a href="https://github.com/tonsky/FiraCode">FiraCode</a></li><li><a href="https://github.com/adobe-fonts/source-code-pro">source-code</a></li><li><a href="https://github.com/intel/intel-one-mono">intel-one-mono</a></li><li><a href="https://github.com/IBM/plex">IBM plex</a></li><li><a href="https://github.com/be5invis/Sarasa-Gothic">更纱黑体</a> 其中含有固定宽度，中英文 2:1，在文档中显示效果更好。</li></ul><p>google 刷机：<a href="https://wiki.lineageos.org/devices/coral/">https://wiki.lineageos.org/devices/coral/</a></p>]]></content>
    
    
    <categories>
      
      <category>软件</category>
      
    </categories>
    
    
    <tags>
      
      <tag>软件推荐</tag>
      
      <tag>软件下载</tag>
      
      <tag>资源</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo搭建与使用</title>
    <link href="/2024/06/10/hexo%E6%90%AD%E5%BB%BA%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    <url>/2024/06/10/hexo%E6%90%AD%E5%BB%BA%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="环境搭建-必选"><a href="#环境搭建-必选" class="headerlink" title="环境搭建(必选)"></a>环境搭建(必选)</h1><p>总体来说，环境搭建首先是安装 git 等相关软件，以及拥有 github 帐号。然后设置 git 和 github 以及创建仓库，最后本地创建 hexo 的构建网页的环境，然后将其链接到 github 仓库上即可，下面分别介绍如何操作。</p><h2 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h2><ul><li>github 账户</li><li><a href="https://git-scm.com/downloads">git</a></li><li><a href="https://nodejs.org/en">nodejs</a></li><li>域名(可选)</li></ul><p>首先安装 git 和 nodejs 软件，全部点击下一步，保持默认安装即可。然后在终端中(cmd 或 powershell)输入以下命令检测安装是否成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git  -v<br>node -v<br>npm  -v<br></code></pre></td></tr></table></figure><h2 id="git-与-github-账户设置"><a href="#git-与-github-账户设置" class="headerlink" title="git 与 github 账户设置"></a>git 与 github 账户设置</h2><p>首先创建 github 账户，这里不介绍如何创建，然后安装 git 软件。<br>打开<code>Git Bash</code>，输入以下命令进行账户和邮件的配置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;用户名&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;注册github的邮箱&quot;</span><br></code></pre></td></tr></table></figure><p>然后创建 ssh 密钥，用来给 hexo 程序进行上传和连接使用。</p><p>在<code>Git Bash</code>中输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -C <span class="hljs-string">&quot;邮箱&quot;</span><br></code></pre></td></tr></table></figure><p>然后一直点击下一步知直到创建完成，打开<code>C:\Users\用户名\.ssh</code>目录下找到<code>id_rsa.pub</code>(如果没有，请打开隐藏文件显示)，然后使用记事本打开该文件并全选复制下来。</p><p>打开 github 网页，在<code>Settings</code>中选择<code>SSH and GPG keys</code>，点击<code>New SSH key</code>。名称自己定义一个，然后把刚刚复制的内容粘贴到<code>Key</code>中，保存即可。</p><p>切换到<code>Git Bash</code>中，输入<code>ssh -T git@github.com</code>检测是否连接成功。<br>出现以下信息表示成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">You<span class="hljs-string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></code></pre></td></tr></table></figure><h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><p>打开 github 网页，在自己的主页上，点击<code>repositories</code>然后点击<code>New</code>，出现创建仓库的页面。</p><p>然后在<code>Repository name*</code>中输入用户名加上 github.io 的后缀，例如用户名为<code>qwer</code>，则实际仓库名填写<code>qwer.github.io</code>，填好后点击<code>Create repository</code>即可创建完成。</p><p>然后测试是否正确，在浏览器中输入网址并访问：<code>https://qwer.github.io</code>,注意这里的<code>qwer</code>需要替换为你的用户名。<br>如果一切正常，将会显示用户名以及该网址和该仓库的描述信息。</p><h2 id="hexo-本地构建网页"><a href="#hexo-本地构建网页" class="headerlink" title="hexo 本地构建网页"></a>hexo 本地构建网页</h2><p>在你想存放的位置创建一个文件夹用来保存 hexo 构建网页的环境，例如<code>D:/hexo</code>文件夹，然后打开<code>Git Bash</code>在此目录下。<br>然后安装顺序执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 初始化hexo</span><br>hexo init<br></code></pre></td></tr></table></figure><p>如果一切正常，将输出以下信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">INFO  Cloning hexo-starter https://github.com/hexojs/hexo-starter.git<br>INFO  Install dependencies<br>INFO  Start blogging with Hexo!<br></code></pre></td></tr></table></figure><p>接下来执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装组件</span><br>npm install<br></code></pre></td></tr></table></figure><p>如果一切正常，将输出以下信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">added 1 package, and audited 227 packages <span class="hljs-keyword">in</span> 1s<br><br>23 packages are looking <span class="hljs-keyword">for</span> funding<br>  run `npm fund` <span class="hljs-keyword">for</span> details<br><br>found 0 vulnerabilities<br></code></pre></td></tr></table></figure><p>然后输入<code>hexo g</code>生成页面，log 如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">INFO  Validating config<br>INFO  Start processing<br>INFO  Files loaded <span class="hljs-keyword">in</span> 277 ms<br>INFO  Generated: archives/2024/06/index.html<br>INFO  Generated: archives/index.html<br>INFO  Generated: archives/2024/index.html<br>INFO  Generated: index.html<br>INFO  Generated: fancybox/jquery.fancybox.min.js<br>INFO  Generated: js/script.js<br>INFO  Generated: css/style.css<br>INFO  Generated: fancybox/jquery.fancybox.min.css<br>INFO  Generated: js/jquery-3.6.4.min.js<br>INFO  Generated: css/images/banner.jpg<br>INFO  Generated: 2024/06/10/hello-world/index.html<br>INFO  11 files generated <span class="hljs-keyword">in</span> 310 ms<br></code></pre></td></tr></table></figure><p>然后执行<code>hexo s</code>命令，打开浏览器输入<code>http://localhost:4000</code>进行预览。</p><h2 id="链接-hexo-本地环境与-github-仓库"><a href="#链接-hexo-本地环境与-github-仓库" class="headerlink" title="链接 hexo 本地环境与 github 仓库"></a>链接 hexo 本地环境与 github 仓库</h2><p>上面只是在浏览器中预览本地的内容，别人无法通过网络进行访问。所以还需要将 hexo 与 github 链接到一起。<br>首先需要安装<code>hexo-deployer-git</code>插件，在上面打开的<code>Git Bash</code>中输入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo-cli<br></code></pre></td></tr></table></figure><p>然后修改<code>D:\hexo\_config.yml</code>（注意路径需要修改到你自己创建的目录），将该文件末尾的以下内容:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">&quot;&quot;</span><br></code></pre></td></tr></table></figure><p>改为如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">git@github.com:qwer/qwer.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">gh-pages</span><br></code></pre></td></tr></table></figure><p>然后在<code>Git Bash</code>中依次输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 1. clean： 清除非必要文件</span><br>hexo c<br><span class="hljs-comment"># 2. deploy：先生成博客，然后将代码上传到github仓库中</span><br>hexo d -g<br></code></pre></td></tr></table></figure><p>上传完毕后，打开浏览器，进入 github 网页，在该仓库的<code>Settings</code>中，点击<code>Pages</code>，将<code>Branch</code>改为<code>gh-pages</code>（来自上面修改的<code>_config.yml</code>文件）。</p><p>稍等片刻后，在浏览器中访问：<code>https://qwer.github.io</code>就可以访问到默认的内容。到这里就搭建好了。</p><p>但是目前只有一篇默认的文章，所以还需要说明一下如何进行创建新的文章。</p><h1 id="发布文章-必选"><a href="#发布文章-必选" class="headerlink" title="发布文章(必选)"></a>发布文章(必选)</h1><p>参考<a href="https://hexo.io/zh-cn/docs/writing">官方文档</a></p><h1 id="更改域名-可选"><a href="#更改域名-可选" class="headerlink" title="更改域名(可选)"></a>更改域名(可选)</h1><h2 id="以阿里云为例"><a href="#以阿里云为例" class="headerlink" title="以阿里云为例"></a>以阿里云为例</h2><p>首先打开阿里云的控制台，选择云解析 DNS-域名解析-解析设置，然后选择添加记录，记录类型选择<code>CNAME</code>，主机记录输入自己想要定义的域名前缀。然后点击确认即可保存该记录。<a href="https://help.aliyun.com/zh/dns/add-a-dns-record#h2-cname-2">官方参考</a></p><p>这个前缀结合后面的域名共同组成了一个完整地址，hexo 中会使用该地址。</p><h2 id="hexo-部分设置"><a href="#hexo-部分设置" class="headerlink" title="hexo 部分设置"></a>hexo 部分设置</h2><p>在本地的目录下<code>D:\hex\source</code>,新建一个文件叫<code>CNAME</code>,注意没有后缀名称。<br>然后输入域名(从上一小节中，添加的<code>CNAME</code>中的内容)。</p><h3 id="github-部分的设置"><a href="#github-部分的设置" class="headerlink" title="github 部分的设置"></a>github 部分的设置</h3><p>然后打开 github，参考以下内容修改 DNS 域名解析的相关设置。<a href="https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site#configuring-an-apex-domain">github 官方文档</a></p><p>到这里，域名更改就彻底结束，后面可以通过方位自己的域名，访问博客。</p><h1 id="主题美化-可选"><a href="#主题美化-可选" class="headerlink" title="主题美化(可选)"></a>主题美化(可选)</h1><p><a href="https://github.com/fluid-dev/hexo-theme-fluid">fluid</a>主题仓库</p>]]></content>
    
    
    
    <tags>
      
      <tag>blog搭建</tag>
      
      <tag>学习记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
